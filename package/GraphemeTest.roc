## WARNING This file is automatically generated. Do not edit it manually. ##
module []

import CodePoint
import Grapheme
import InternalCP

to_code_point_list : List Str -> List (List U32)
to_code_point_list = |strings|
    strings
    |> List.map(|str|
        when str |> Str.to_utf8 |> CodePoint.parse_utf8 is
            Ok cps -> List.map(cps, CodePoint.to_u32)
            Err _ ->
                crash "expected valid utf8"
    )


# GraphemeBreakTest-15.1.0.txt:line 25
# % 0020 % 0020 % #  % [0.2] SPACE (Other) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[32], [32]])
    got =
        [32, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 26
# % 0020 x 0308 % 0020 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[32, 776], [32]])
    got =
        [32, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 27
# % 0020 % 000D % #  % [0.2] SPACE (Other) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[32], [13]])
    got =
        [32, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 28
# % 0020 x 0308 % 000D % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[32, 776], [13]])
    got =
        [32, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 29
# % 0020 % 000A % #  % [0.2] SPACE (Other) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[32], [10]])
    got =
        [32, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 30
# % 0020 x 0308 % 000A % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[32, 776], [10]])
    got =
        [32, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 31
# % 0020 % 0001 % #  % [0.2] SPACE (Other) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[32], [1]])
    got =
        [32, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 32
# % 0020 x 0308 % 0001 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[32, 776], [1]])
    got =
        [32, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 33
# % 0020 x 034F % #  % [0.2] SPACE (Other) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[32, 847]])
    got =
        [32, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 34
# % 0020 x 0308 x 034F % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[32, 776, 847]])
    got =
        [32, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 35
# % 0020 % 1F1E6 % #  % [0.2] SPACE (Other) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[32], [127462]])
    got =
        [32, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 36
# % 0020 x 0308 % 1F1E6 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[32, 776], [127462]])
    got =
        [32, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 37
# % 0020 % 0600 % #  % [0.2] SPACE (Other) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[32], [1536]])
    got =
        [32, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 38
# % 0020 x 0308 % 0600 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[32, 776], [1536]])
    got =
        [32, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 41
# % 0020 % 1100 % #  % [0.2] SPACE (Other) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[32], [4352]])
    got =
        [32, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 42
# % 0020 x 0308 % 1100 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[32, 776], [4352]])
    got =
        [32, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 43
# % 0020 % 1160 % #  % [0.2] SPACE (Other) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[32], [4448]])
    got =
        [32, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 44
# % 0020 x 0308 % 1160 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[32, 776], [4448]])
    got =
        [32, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 45
# % 0020 % 11A8 % #  % [0.2] SPACE (Other) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[32], [4520]])
    got =
        [32, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 46
# % 0020 x 0308 % 11A8 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[32, 776], [4520]])
    got =
        [32, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 47
# % 0020 % AC00 % #  % [0.2] SPACE (Other) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[32], [44032]])
    got =
        [32, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 48
# % 0020 x 0308 % AC00 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[32, 776], [44032]])
    got =
        [32, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 49
# % 0020 % AC01 % #  % [0.2] SPACE (Other) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[32], [44033]])
    got =
        [32, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 50
# % 0020 x 0308 % AC01 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[32, 776], [44033]])
    got =
        [32, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 51
# % 0020 x 0900 % #  % [0.2] SPACE (Other) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[32, 2304]])
    got =
        [32, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 52
# % 0020 x 0308 x 0900 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[32, 776, 2304]])
    got =
        [32, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 55
# % 0020 % 0904 % #  % [0.2] SPACE (Other) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[32], [2308]])
    got =
        [32, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 56
# % 0020 x 0308 % 0904 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[32, 776], [2308]])
    got =
        [32, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 57
# % 0020 % 0D4E % #  % [0.2] SPACE (Other) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[32], [3406]])
    got =
        [32, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 58
# % 0020 x 0308 % 0D4E % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[32, 776], [3406]])
    got =
        [32, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 59
# % 0020 % 0915 % #  % [0.2] SPACE (Other) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[32], [2325]])
    got =
        [32, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 60
# % 0020 x 0308 % 0915 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[32, 776], [2325]])
    got =
        [32, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 61
# % 0020 % 231A % #  % [0.2] SPACE (Other) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[32], [8986]])
    got =
        [32, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 62
# % 0020 x 0308 % 231A % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[32, 776], [8986]])
    got =
        [32, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 63
# % 0020 x 0300 % #  % [0.2] SPACE (Other) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[32, 768]])
    got =
        [32, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 64
# % 0020 x 0308 x 0300 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[32, 776, 768]])
    got =
        [32, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 65
# % 0020 x 093C % #  % [0.2] SPACE (Other) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[32, 2364]])
    got =
        [32, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 66
# % 0020 x 0308 x 093C % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[32, 776, 2364]])
    got =
        [32, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 67
# % 0020 x 094D % #  % [0.2] SPACE (Other) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[32, 2381]])
    got =
        [32, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 68
# % 0020 x 0308 x 094D % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[32, 776, 2381]])
    got =
        [32, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 69
# % 0020 x 200D % #  % [0.2] SPACE (Other) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[32, 8205]])
    got =
        [32, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 70
# % 0020 x 0308 x 200D % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[32, 776, 8205]])
    got =
        [32, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 71
# % 0020 % 0378 % #  % [0.2] SPACE (Other) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[32], [888]])
    got =
        [32, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 72
# % 0020 x 0308 % 0378 % #  % [0.2] SPACE (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[32, 776], [888]])
    got =
        [32, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 73
# % 000D % 0020 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[13], [32]])
    got =
        [13, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 74
# % 000D % 0308 % 0020 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[13], [776], [32]])
    got =
        [13, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 75
# % 000D % 000D % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[13], [13]])
    got =
        [13, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 76
# % 000D % 0308 % 000D % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[13], [776], [13]])
    got =
        [13, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 77
# % 000D x 000A % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) x [3.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[13, 10]])
    got =
        [13, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 78
# % 000D % 0308 % 000A % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[13], [776], [10]])
    got =
        [13, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 79
# % 000D % 0001 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[13], [1]])
    got =
        [13, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 80
# % 000D % 0308 % 0001 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[13], [776], [1]])
    got =
        [13, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 81
# % 000D % 034F % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[13], [847]])
    got =
        [13, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 82
# % 000D % 0308 x 034F % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[13], [776, 847]])
    got =
        [13, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 83
# % 000D % 1F1E6 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[13], [127462]])
    got =
        [13, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 84
# % 000D % 0308 % 1F1E6 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[13], [776], [127462]])
    got =
        [13, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 85
# % 000D % 0600 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[13], [1536]])
    got =
        [13, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 86
# % 000D % 0308 % 0600 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[13], [776], [1536]])
    got =
        [13, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 87
# % 000D % 0A03 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] GURMUKHI SIGN VISARGA (SpacingMark) % [0.3]
expect
    exp = Ok([[13], [2563]])
    got =
        [13, 2563]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 89
# % 000D % 1100 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[13], [4352]])
    got =
        [13, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 90
# % 000D % 0308 % 1100 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[13], [776], [4352]])
    got =
        [13, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 91
# % 000D % 1160 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[13], [4448]])
    got =
        [13, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 92
# % 000D % 0308 % 1160 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[13], [776], [4448]])
    got =
        [13, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 93
# % 000D % 11A8 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[13], [4520]])
    got =
        [13, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 94
# % 000D % 0308 % 11A8 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[13], [776], [4520]])
    got =
        [13, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 95
# % 000D % AC00 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[13], [44032]])
    got =
        [13, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 96
# % 000D % 0308 % AC00 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[13], [776], [44032]])
    got =
        [13, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 97
# % 000D % AC01 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[13], [44033]])
    got =
        [13, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 98
# % 000D % 0308 % AC01 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[13], [776], [44033]])
    got =
        [13, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 99
# % 000D % 0900 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[13], [2304]])
    got =
        [13, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 100
# % 000D % 0308 x 0900 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[13], [776, 2304]])
    got =
        [13, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 101
# % 000D % 0903 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[13], [2307]])
    got =
        [13, 2307]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 103
# % 000D % 0904 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[13], [2308]])
    got =
        [13, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 104
# % 000D % 0308 % 0904 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[13], [776], [2308]])
    got =
        [13, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 105
# % 000D % 0D4E % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[13], [3406]])
    got =
        [13, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 106
# % 000D % 0308 % 0D4E % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[13], [776], [3406]])
    got =
        [13, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 107
# % 000D % 0915 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[13], [2325]])
    got =
        [13, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 108
# % 000D % 0308 % 0915 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[13], [776], [2325]])
    got =
        [13, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 109
# % 000D % 231A % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[13], [8986]])
    got =
        [13, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 110
# % 000D % 0308 % 231A % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[13], [776], [8986]])
    got =
        [13, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 111
# % 000D % 0300 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[13], [768]])
    got =
        [13, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 112
# % 000D % 0308 x 0300 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[13], [776, 768]])
    got =
        [13, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 113
# % 000D % 093C % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[13], [2364]])
    got =
        [13, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 114
# % 000D % 0308 x 093C % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[13], [776, 2364]])
    got =
        [13, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 115
# % 000D % 094D % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[13], [2381]])
    got =
        [13, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 116
# % 000D % 0308 x 094D % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[13], [776, 2381]])
    got =
        [13, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 117
# % 000D % 200D % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[13], [8205]])
    got =
        [13, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 118
# % 000D % 0308 x 200D % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[13], [776, 8205]])
    got =
        [13, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 119
# % 000D % 0378 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[13], [888]])
    got =
        [13, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 120
# % 000D % 0308 % 0378 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[13], [776], [888]])
    got =
        [13, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 121
# % 000A % 0020 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[10], [32]])
    got =
        [10, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 122
# % 000A % 0308 % 0020 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[10], [776], [32]])
    got =
        [10, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 123
# % 000A % 000D % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[10], [13]])
    got =
        [10, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 124
# % 000A % 0308 % 000D % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[10], [776], [13]])
    got =
        [10, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 125
# % 000A % 000A % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[10], [10]])
    got =
        [10, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 126
# % 000A % 0308 % 000A % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[10], [776], [10]])
    got =
        [10, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 127
# % 000A % 0001 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[10], [1]])
    got =
        [10, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 128
# % 000A % 0308 % 0001 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[10], [776], [1]])
    got =
        [10, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 129
# % 000A % 034F % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[10], [847]])
    got =
        [10, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 130
# % 000A % 0308 x 034F % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[10], [776, 847]])
    got =
        [10, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 131
# % 000A % 1F1E6 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[10], [127462]])
    got =
        [10, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 132
# % 000A % 0308 % 1F1E6 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[10], [776], [127462]])
    got =
        [10, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 133
# % 000A % 0600 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[10], [1536]])
    got =
        [10, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 134
# % 000A % 0308 % 0600 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[10], [776], [1536]])
    got =
        [10, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 135
# % 000A % 0A03 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] GURMUKHI SIGN VISARGA (SpacingMark) % [0.3]
expect
    exp = Ok([[10], [2563]])
    got =
        [10, 2563]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 137
# % 000A % 1100 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[10], [4352]])
    got =
        [10, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 138
# % 000A % 0308 % 1100 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[10], [776], [4352]])
    got =
        [10, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 139
# % 000A % 1160 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[10], [4448]])
    got =
        [10, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 140
# % 000A % 0308 % 1160 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[10], [776], [4448]])
    got =
        [10, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 141
# % 000A % 11A8 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[10], [4520]])
    got =
        [10, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 142
# % 000A % 0308 % 11A8 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[10], [776], [4520]])
    got =
        [10, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 143
# % 000A % AC00 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[10], [44032]])
    got =
        [10, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 144
# % 000A % 0308 % AC00 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[10], [776], [44032]])
    got =
        [10, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 145
# % 000A % AC01 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[10], [44033]])
    got =
        [10, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 146
# % 000A % 0308 % AC01 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[10], [776], [44033]])
    got =
        [10, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 147
# % 000A % 0900 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[10], [2304]])
    got =
        [10, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 148
# % 000A % 0308 x 0900 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[10], [776, 2304]])
    got =
        [10, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 149
# % 000A % 0903 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[10], [2307]])
    got =
        [10, 2307]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 151
# % 000A % 0904 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[10], [2308]])
    got =
        [10, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 152
# % 000A % 0308 % 0904 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[10], [776], [2308]])
    got =
        [10, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 153
# % 000A % 0D4E % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[10], [3406]])
    got =
        [10, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 154
# % 000A % 0308 % 0D4E % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[10], [776], [3406]])
    got =
        [10, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 155
# % 000A % 0915 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[10], [2325]])
    got =
        [10, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 156
# % 000A % 0308 % 0915 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[10], [776], [2325]])
    got =
        [10, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 157
# % 000A % 231A % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[10], [8986]])
    got =
        [10, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 158
# % 000A % 0308 % 231A % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[10], [776], [8986]])
    got =
        [10, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 159
# % 000A % 0300 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[10], [768]])
    got =
        [10, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 160
# % 000A % 0308 x 0300 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[10], [776, 768]])
    got =
        [10, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 161
# % 000A % 093C % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[10], [2364]])
    got =
        [10, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 162
# % 000A % 0308 x 093C % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[10], [776, 2364]])
    got =
        [10, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 163
# % 000A % 094D % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[10], [2381]])
    got =
        [10, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 164
# % 000A % 0308 x 094D % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[10], [776, 2381]])
    got =
        [10, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 165
# % 000A % 200D % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[10], [8205]])
    got =
        [10, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 166
# % 000A % 0308 x 200D % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[10], [776, 8205]])
    got =
        [10, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 167
# % 000A % 0378 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[10], [888]])
    got =
        [10, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 168
# % 000A % 0308 % 0378 % #  % [0.2] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[10], [776], [888]])
    got =
        [10, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 169
# % 0001 % 0020 % #  % [0.2] <START OF HEADING> (Control) % [4.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[1], [32]])
    got =
        [1, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 170
# % 0001 % 0308 % 0020 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[1], [776], [32]])
    got =
        [1, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 171
# % 0001 % 000D % #  % [0.2] <START OF HEADING> (Control) % [4.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[1], [13]])
    got =
        [1, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 172
# % 0001 % 0308 % 000D % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[1], [776], [13]])
    got =
        [1, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 173
# % 0001 % 000A % #  % [0.2] <START OF HEADING> (Control) % [4.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[1], [10]])
    got =
        [1, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 174
# % 0001 % 0308 % 000A % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[1], [776], [10]])
    got =
        [1, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 175
# % 0001 % 0001 % #  % [0.2] <START OF HEADING> (Control) % [4.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[1], [1]])
    got =
        [1, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 176
# % 0001 % 0308 % 0001 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[1], [776], [1]])
    got =
        [1, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 177
# % 0001 % 034F % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[1], [847]])
    got =
        [1, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 178
# % 0001 % 0308 x 034F % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[1], [776, 847]])
    got =
        [1, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 179
# % 0001 % 1F1E6 % #  % [0.2] <START OF HEADING> (Control) % [4.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[1], [127462]])
    got =
        [1, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 180
# % 0001 % 0308 % 1F1E6 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[1], [776], [127462]])
    got =
        [1, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 181
# % 0001 % 0600 % #  % [0.2] <START OF HEADING> (Control) % [4.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[1], [1536]])
    got =
        [1, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 182
# % 0001 % 0308 % 0600 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[1], [776], [1536]])
    got =
        [1, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 183
# % 0001 % 0A03 % #  % [0.2] <START OF HEADING> (Control) % [4.0] GURMUKHI SIGN VISARGA (SpacingMark) % [0.3]
expect
    exp = Ok([[1], [2563]])
    got =
        [1, 2563]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 185
# % 0001 % 1100 % #  % [0.2] <START OF HEADING> (Control) % [4.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[1], [4352]])
    got =
        [1, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 186
# % 0001 % 0308 % 1100 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[1], [776], [4352]])
    got =
        [1, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 187
# % 0001 % 1160 % #  % [0.2] <START OF HEADING> (Control) % [4.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[1], [4448]])
    got =
        [1, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 188
# % 0001 % 0308 % 1160 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[1], [776], [4448]])
    got =
        [1, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 189
# % 0001 % 11A8 % #  % [0.2] <START OF HEADING> (Control) % [4.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[1], [4520]])
    got =
        [1, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 190
# % 0001 % 0308 % 11A8 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[1], [776], [4520]])
    got =
        [1, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 191
# % 0001 % AC00 % #  % [0.2] <START OF HEADING> (Control) % [4.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[1], [44032]])
    got =
        [1, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 192
# % 0001 % 0308 % AC00 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[1], [776], [44032]])
    got =
        [1, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 193
# % 0001 % AC01 % #  % [0.2] <START OF HEADING> (Control) % [4.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[1], [44033]])
    got =
        [1, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 194
# % 0001 % 0308 % AC01 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[1], [776], [44033]])
    got =
        [1, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 195
# % 0001 % 0900 % #  % [0.2] <START OF HEADING> (Control) % [4.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1], [2304]])
    got =
        [1, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 196
# % 0001 % 0308 x 0900 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1], [776, 2304]])
    got =
        [1, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 197
# % 0001 % 0903 % #  % [0.2] <START OF HEADING> (Control) % [4.0] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1], [2307]])
    got =
        [1, 2307]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 199
# % 0001 % 0904 % #  % [0.2] <START OF HEADING> (Control) % [4.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1], [2308]])
    got =
        [1, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 200
# % 0001 % 0308 % 0904 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1], [776], [2308]])
    got =
        [1, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 201
# % 0001 % 0D4E % #  % [0.2] <START OF HEADING> (Control) % [4.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1], [3406]])
    got =
        [1, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 202
# % 0001 % 0308 % 0D4E % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1], [776], [3406]])
    got =
        [1, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 203
# % 0001 % 0915 % #  % [0.2] <START OF HEADING> (Control) % [4.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[1], [2325]])
    got =
        [1, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 204
# % 0001 % 0308 % 0915 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[1], [776], [2325]])
    got =
        [1, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 205
# % 0001 % 231A % #  % [0.2] <START OF HEADING> (Control) % [4.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[1], [8986]])
    got =
        [1, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 206
# % 0001 % 0308 % 231A % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[1], [776], [8986]])
    got =
        [1, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 207
# % 0001 % 0300 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1], [768]])
    got =
        [1, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 208
# % 0001 % 0308 x 0300 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1], [776, 768]])
    got =
        [1, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 209
# % 0001 % 093C % #  % [0.2] <START OF HEADING> (Control) % [4.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1], [2364]])
    got =
        [1, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 210
# % 0001 % 0308 x 093C % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1], [776, 2364]])
    got =
        [1, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 211
# % 0001 % 094D % #  % [0.2] <START OF HEADING> (Control) % [4.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1], [2381]])
    got =
        [1, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 212
# % 0001 % 0308 x 094D % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1], [776, 2381]])
    got =
        [1, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 213
# % 0001 % 200D % #  % [0.2] <START OF HEADING> (Control) % [4.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1], [8205]])
    got =
        [1, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 214
# % 0001 % 0308 x 200D % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1], [776, 8205]])
    got =
        [1, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 215
# % 0001 % 0378 % #  % [0.2] <START OF HEADING> (Control) % [4.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[1], [888]])
    got =
        [1, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 216
# % 0001 % 0308 % 0378 % #  % [0.2] <START OF HEADING> (Control) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[1], [776], [888]])
    got =
        [1, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 217
# % 034F % 0020 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[847], [32]])
    got =
        [847, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 218
# % 034F x 0308 % 0020 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[847, 776], [32]])
    got =
        [847, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 219
# % 034F % 000D % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[847], [13]])
    got =
        [847, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 220
# % 034F x 0308 % 000D % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[847, 776], [13]])
    got =
        [847, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 221
# % 034F % 000A % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[847], [10]])
    got =
        [847, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 222
# % 034F x 0308 % 000A % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[847, 776], [10]])
    got =
        [847, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 223
# % 034F % 0001 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[847], [1]])
    got =
        [847, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 224
# % 034F x 0308 % 0001 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[847, 776], [1]])
    got =
        [847, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 225
# % 034F x 034F % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[847, 847]])
    got =
        [847, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 226
# % 034F x 0308 x 034F % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[847, 776, 847]])
    got =
        [847, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 227
# % 034F % 1F1E6 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[847], [127462]])
    got =
        [847, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 228
# % 034F x 0308 % 1F1E6 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[847, 776], [127462]])
    got =
        [847, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 229
# % 034F % 0600 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[847], [1536]])
    got =
        [847, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 230
# % 034F x 0308 % 0600 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[847, 776], [1536]])
    got =
        [847, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 233
# % 034F % 1100 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[847], [4352]])
    got =
        [847, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 234
# % 034F x 0308 % 1100 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[847, 776], [4352]])
    got =
        [847, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 235
# % 034F % 1160 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[847], [4448]])
    got =
        [847, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 236
# % 034F x 0308 % 1160 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[847, 776], [4448]])
    got =
        [847, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 237
# % 034F % 11A8 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[847], [4520]])
    got =
        [847, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 238
# % 034F x 0308 % 11A8 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[847, 776], [4520]])
    got =
        [847, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 239
# % 034F % AC00 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[847], [44032]])
    got =
        [847, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 240
# % 034F x 0308 % AC00 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[847, 776], [44032]])
    got =
        [847, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 241
# % 034F % AC01 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[847], [44033]])
    got =
        [847, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 242
# % 034F x 0308 % AC01 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[847, 776], [44033]])
    got =
        [847, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 243
# % 034F x 0900 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[847, 2304]])
    got =
        [847, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 244
# % 034F x 0308 x 0900 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[847, 776, 2304]])
    got =
        [847, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 247
# % 034F % 0904 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[847], [2308]])
    got =
        [847, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 248
# % 034F x 0308 % 0904 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[847, 776], [2308]])
    got =
        [847, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 249
# % 034F % 0D4E % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[847], [3406]])
    got =
        [847, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 250
# % 034F x 0308 % 0D4E % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[847, 776], [3406]])
    got =
        [847, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 251
# % 034F % 0915 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[847], [2325]])
    got =
        [847, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 252
# % 034F x 0308 % 0915 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[847, 776], [2325]])
    got =
        [847, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 253
# % 034F % 231A % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[847], [8986]])
    got =
        [847, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 254
# % 034F x 0308 % 231A % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[847, 776], [8986]])
    got =
        [847, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 255
# % 034F x 0300 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[847, 768]])
    got =
        [847, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 256
# % 034F x 0308 x 0300 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[847, 776, 768]])
    got =
        [847, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 257
# % 034F x 093C % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[847, 2364]])
    got =
        [847, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 258
# % 034F x 0308 x 093C % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[847, 776, 2364]])
    got =
        [847, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 259
# % 034F x 094D % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[847, 2381]])
    got =
        [847, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 260
# % 034F x 0308 x 094D % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[847, 776, 2381]])
    got =
        [847, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 261
# % 034F x 200D % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[847, 8205]])
    got =
        [847, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 262
# % 034F x 0308 x 200D % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[847, 776, 8205]])
    got =
        [847, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 263
# % 034F % 0378 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[847], [888]])
    got =
        [847, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 264
# % 034F x 0308 % 0378 % #  % [0.2] COMBINING GRAPHEME JOINER (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[847, 776], [888]])
    got =
        [847, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 265
# % 1F1E6 % 0020 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[127462], [32]])
    got =
        [127462, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 266
# % 1F1E6 x 0308 % 0020 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[127462, 776], [32]])
    got =
        [127462, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 267
# % 1F1E6 % 000D % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[127462], [13]])
    got =
        [127462, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 268
# % 1F1E6 x 0308 % 000D % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[127462, 776], [13]])
    got =
        [127462, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 269
# % 1F1E6 % 000A % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[127462], [10]])
    got =
        [127462, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 270
# % 1F1E6 x 0308 % 000A % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[127462, 776], [10]])
    got =
        [127462, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 271
# % 1F1E6 % 0001 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[127462], [1]])
    got =
        [127462, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 272
# % 1F1E6 x 0308 % 0001 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[127462, 776], [1]])
    got =
        [127462, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 273
# % 1F1E6 x 034F % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[127462, 847]])
    got =
        [127462, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 274
# % 1F1E6 x 0308 x 034F % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[127462, 776, 847]])
    got =
        [127462, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 275
# % 1F1E6 x 1F1E6 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [12.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[127462, 127462]])
    got =
        [127462, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 276
# % 1F1E6 x 0308 % 1F1E6 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[127462, 776], [127462]])
    got =
        [127462, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 277
# % 1F1E6 % 0600 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[127462], [1536]])
    got =
        [127462, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 278
# % 1F1E6 x 0308 % 0600 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[127462, 776], [1536]])
    got =
        [127462, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 281
# % 1F1E6 % 1100 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[127462], [4352]])
    got =
        [127462, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 282
# % 1F1E6 x 0308 % 1100 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[127462, 776], [4352]])
    got =
        [127462, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 283
# % 1F1E6 % 1160 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[127462], [4448]])
    got =
        [127462, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 284
# % 1F1E6 x 0308 % 1160 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[127462, 776], [4448]])
    got =
        [127462, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 285
# % 1F1E6 % 11A8 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[127462], [4520]])
    got =
        [127462, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 286
# % 1F1E6 x 0308 % 11A8 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[127462, 776], [4520]])
    got =
        [127462, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 287
# % 1F1E6 % AC00 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[127462], [44032]])
    got =
        [127462, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 288
# % 1F1E6 x 0308 % AC00 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[127462, 776], [44032]])
    got =
        [127462, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 289
# % 1F1E6 % AC01 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[127462], [44033]])
    got =
        [127462, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 290
# % 1F1E6 x 0308 % AC01 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[127462, 776], [44033]])
    got =
        [127462, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 291
# % 1F1E6 x 0900 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[127462, 2304]])
    got =
        [127462, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 292
# % 1F1E6 x 0308 x 0900 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[127462, 776, 2304]])
    got =
        [127462, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 295
# % 1F1E6 % 0904 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[127462], [2308]])
    got =
        [127462, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 296
# % 1F1E6 x 0308 % 0904 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[127462, 776], [2308]])
    got =
        [127462, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 297
# % 1F1E6 % 0D4E % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[127462], [3406]])
    got =
        [127462, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 298
# % 1F1E6 x 0308 % 0D4E % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[127462, 776], [3406]])
    got =
        [127462, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 299
# % 1F1E6 % 0915 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[127462], [2325]])
    got =
        [127462, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 300
# % 1F1E6 x 0308 % 0915 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[127462, 776], [2325]])
    got =
        [127462, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 301
# % 1F1E6 % 231A % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[127462], [8986]])
    got =
        [127462, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 302
# % 1F1E6 x 0308 % 231A % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[127462, 776], [8986]])
    got =
        [127462, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 303
# % 1F1E6 x 0300 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[127462, 768]])
    got =
        [127462, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 304
# % 1F1E6 x 0308 x 0300 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[127462, 776, 768]])
    got =
        [127462, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 305
# % 1F1E6 x 093C % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[127462, 2364]])
    got =
        [127462, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 306
# % 1F1E6 x 0308 x 093C % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[127462, 776, 2364]])
    got =
        [127462, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 307
# % 1F1E6 x 094D % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[127462, 2381]])
    got =
        [127462, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 308
# % 1F1E6 x 0308 x 094D % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[127462, 776, 2381]])
    got =
        [127462, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 309
# % 1F1E6 x 200D % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[127462, 8205]])
    got =
        [127462, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 310
# % 1F1E6 x 0308 x 200D % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[127462, 776, 8205]])
    got =
        [127462, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 311
# % 1F1E6 % 0378 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[127462], [888]])
    got =
        [127462, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 312
# % 1F1E6 x 0308 % 0378 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[127462, 776], [888]])
    got =
        [127462, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 314
# % 0600 x 0308 % 0020 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[1536, 776], [32]])
    got =
        [1536, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 315
# % 0600 % 000D % #  % [0.2] ARABIC NUMBER SIGN (Prepend) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[1536], [13]])
    got =
        [1536, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 316
# % 0600 x 0308 % 000D % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[1536, 776], [13]])
    got =
        [1536, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 317
# % 0600 % 000A % #  % [0.2] ARABIC NUMBER SIGN (Prepend) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[1536], [10]])
    got =
        [1536, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 318
# % 0600 x 0308 % 000A % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[1536, 776], [10]])
    got =
        [1536, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 319
# % 0600 % 0001 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[1536], [1]])
    got =
        [1536, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 320
# % 0600 x 0308 % 0001 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[1536, 776], [1]])
    got =
        [1536, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 321
# % 0600 x 034F % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[1536, 847]])
    got =
        [1536, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 322
# % 0600 x 0308 x 034F % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[1536, 776, 847]])
    got =
        [1536, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 324
# % 0600 x 0308 % 1F1E6 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[1536, 776], [127462]])
    got =
        [1536, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 326
# % 0600 x 0308 % 0600 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[1536, 776], [1536]])
    got =
        [1536, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 330
# % 0600 x 0308 % 1100 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[1536, 776], [4352]])
    got =
        [1536, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 332
# % 0600 x 0308 % 1160 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[1536, 776], [4448]])
    got =
        [1536, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 334
# % 0600 x 0308 % 11A8 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[1536, 776], [4520]])
    got =
        [1536, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 336
# % 0600 x 0308 % AC00 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[1536, 776], [44032]])
    got =
        [1536, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 338
# % 0600 x 0308 % AC01 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[1536, 776], [44033]])
    got =
        [1536, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 339
# % 0600 x 0900 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1536, 2304]])
    got =
        [1536, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 340
# % 0600 x 0308 x 0900 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1536, 776, 2304]])
    got =
        [1536, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 344
# % 0600 x 0308 % 0904 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1536, 776], [2308]])
    got =
        [1536, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 346
# % 0600 x 0308 % 0D4E % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[1536, 776], [3406]])
    got =
        [1536, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 348
# % 0600 x 0308 % 0915 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[1536, 776], [2325]])
    got =
        [1536, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 350
# % 0600 x 0308 % 231A % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[1536, 776], [8986]])
    got =
        [1536, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 351
# % 0600 x 0300 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1536, 768]])
    got =
        [1536, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 352
# % 0600 x 0308 x 0300 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1536, 776, 768]])
    got =
        [1536, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 353
# % 0600 x 093C % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1536, 2364]])
    got =
        [1536, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 354
# % 0600 x 0308 x 093C % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1536, 776, 2364]])
    got =
        [1536, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 355
# % 0600 x 094D % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1536, 2381]])
    got =
        [1536, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 356
# % 0600 x 0308 x 094D % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1536, 776, 2381]])
    got =
        [1536, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 357
# % 0600 x 200D % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1536, 8205]])
    got =
        [1536, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 358
# % 0600 x 0308 x 200D % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[1536, 776, 8205]])
    got =
        [1536, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 360
# % 0600 x 0308 % 0378 % #  % [0.2] ARABIC NUMBER SIGN (Prepend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[1536, 776], [888]])
    got =
        [1536, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 361
# % 0A03 % 0020 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2563], [32]])
    got =
        [2563, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 362
# % 0A03 x 0308 % 0020 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2563, 776], [32]])
    got =
        [2563, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 363
# % 0A03 % 000D % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2563], [13]])
    got =
        [2563, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 364
# % 0A03 x 0308 % 000D % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2563, 776], [13]])
    got =
        [2563, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 365
# % 0A03 % 000A % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2563], [10]])
    got =
        [2563, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 366
# % 0A03 x 0308 % 000A % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2563, 776], [10]])
    got =
        [2563, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 367
# % 0A03 % 0001 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2563], [1]])
    got =
        [2563, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 368
# % 0A03 x 0308 % 0001 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2563, 776], [1]])
    got =
        [2563, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 369
# % 0A03 x 034F % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2563, 847]])
    got =
        [2563, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 370
# % 0A03 x 0308 x 034F % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2563, 776, 847]])
    got =
        [2563, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 371
# % 0A03 % 1F1E6 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2563], [127462]])
    got =
        [2563, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 372
# % 0A03 x 0308 % 1F1E6 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2563, 776], [127462]])
    got =
        [2563, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 373
# % 0A03 % 0600 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2563], [1536]])
    got =
        [2563, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 374
# % 0A03 x 0308 % 0600 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2563, 776], [1536]])
    got =
        [2563, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 377
# % 0A03 % 1100 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2563], [4352]])
    got =
        [2563, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 378
# % 0A03 x 0308 % 1100 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2563, 776], [4352]])
    got =
        [2563, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 379
# % 0A03 % 1160 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2563], [4448]])
    got =
        [2563, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 380
# % 0A03 x 0308 % 1160 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2563, 776], [4448]])
    got =
        [2563, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 381
# % 0A03 % 11A8 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2563], [4520]])
    got =
        [2563, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 382
# % 0A03 x 0308 % 11A8 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2563, 776], [4520]])
    got =
        [2563, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 383
# % 0A03 % AC00 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2563], [44032]])
    got =
        [2563, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 384
# % 0A03 x 0308 % AC00 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2563, 776], [44032]])
    got =
        [2563, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 385
# % 0A03 % AC01 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2563], [44033]])
    got =
        [2563, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 386
# % 0A03 x 0308 % AC01 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2563, 776], [44033]])
    got =
        [2563, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 387
# % 0A03 x 0900 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2563, 2304]])
    got =
        [2563, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 388
# % 0A03 x 0308 x 0900 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2563, 776, 2304]])
    got =
        [2563, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 391
# % 0A03 % 0904 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2563], [2308]])
    got =
        [2563, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 392
# % 0A03 x 0308 % 0904 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2563, 776], [2308]])
    got =
        [2563, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 393
# % 0A03 % 0D4E % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2563], [3406]])
    got =
        [2563, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 394
# % 0A03 x 0308 % 0D4E % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2563, 776], [3406]])
    got =
        [2563, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 395
# % 0A03 % 0915 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2563], [2325]])
    got =
        [2563, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 396
# % 0A03 x 0308 % 0915 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2563, 776], [2325]])
    got =
        [2563, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 397
# % 0A03 % 231A % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2563], [8986]])
    got =
        [2563, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 398
# % 0A03 x 0308 % 231A % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2563, 776], [8986]])
    got =
        [2563, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 399
# % 0A03 x 0300 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2563, 768]])
    got =
        [2563, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 400
# % 0A03 x 0308 x 0300 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2563, 776, 768]])
    got =
        [2563, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 401
# % 0A03 x 093C % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2563, 2364]])
    got =
        [2563, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 402
# % 0A03 x 0308 x 093C % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2563, 776, 2364]])
    got =
        [2563, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 403
# % 0A03 x 094D % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2563, 2381]])
    got =
        [2563, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 404
# % 0A03 x 0308 x 094D % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2563, 776, 2381]])
    got =
        [2563, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 405
# % 0A03 x 200D % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2563, 8205]])
    got =
        [2563, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 406
# % 0A03 x 0308 x 200D % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2563, 776, 8205]])
    got =
        [2563, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 407
# % 0A03 % 0378 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2563], [888]])
    got =
        [2563, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 408
# % 0A03 x 0308 % 0378 % #  % [0.2] GURMUKHI SIGN VISARGA (SpacingMark) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2563, 776], [888]])
    got =
        [2563, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 409
# % 1100 % 0020 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[4352], [32]])
    got =
        [4352, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 410
# % 1100 x 0308 % 0020 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[4352, 776], [32]])
    got =
        [4352, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 411
# % 1100 % 000D % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[4352], [13]])
    got =
        [4352, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 412
# % 1100 x 0308 % 000D % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[4352, 776], [13]])
    got =
        [4352, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 413
# % 1100 % 000A % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[4352], [10]])
    got =
        [4352, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 414
# % 1100 x 0308 % 000A % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[4352, 776], [10]])
    got =
        [4352, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 415
# % 1100 % 0001 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[4352], [1]])
    got =
        [4352, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 416
# % 1100 x 0308 % 0001 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[4352, 776], [1]])
    got =
        [4352, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 417
# % 1100 x 034F % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[4352, 847]])
    got =
        [4352, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 418
# % 1100 x 0308 x 034F % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[4352, 776, 847]])
    got =
        [4352, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 419
# % 1100 % 1F1E6 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[4352], [127462]])
    got =
        [4352, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 420
# % 1100 x 0308 % 1F1E6 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[4352, 776], [127462]])
    got =
        [4352, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 421
# % 1100 % 0600 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[4352], [1536]])
    got =
        [4352, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 422
# % 1100 x 0308 % 0600 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[4352, 776], [1536]])
    got =
        [4352, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 425
# % 1100 x 1100 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [6.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[4352, 4352]])
    got =
        [4352, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 426
# % 1100 x 0308 % 1100 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[4352, 776], [4352]])
    got =
        [4352, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 427
# % 1100 x 1160 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [6.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[4352, 4448]])
    got =
        [4352, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 428
# % 1100 x 0308 % 1160 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[4352, 776], [4448]])
    got =
        [4352, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 429
# % 1100 % 11A8 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[4352], [4520]])
    got =
        [4352, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 430
# % 1100 x 0308 % 11A8 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[4352, 776], [4520]])
    got =
        [4352, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 431
# % 1100 x AC00 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [6.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[4352, 44032]])
    got =
        [4352, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 432
# % 1100 x 0308 % AC00 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[4352, 776], [44032]])
    got =
        [4352, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 433
# % 1100 x AC01 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [6.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[4352, 44033]])
    got =
        [4352, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 434
# % 1100 x 0308 % AC01 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[4352, 776], [44033]])
    got =
        [4352, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 435
# % 1100 x 0900 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4352, 2304]])
    got =
        [4352, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 436
# % 1100 x 0308 x 0900 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4352, 776, 2304]])
    got =
        [4352, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 439
# % 1100 % 0904 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4352], [2308]])
    got =
        [4352, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 440
# % 1100 x 0308 % 0904 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4352, 776], [2308]])
    got =
        [4352, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 441
# % 1100 % 0D4E % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4352], [3406]])
    got =
        [4352, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 442
# % 1100 x 0308 % 0D4E % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4352, 776], [3406]])
    got =
        [4352, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 443
# % 1100 % 0915 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[4352], [2325]])
    got =
        [4352, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 444
# % 1100 x 0308 % 0915 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[4352, 776], [2325]])
    got =
        [4352, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 445
# % 1100 % 231A % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[4352], [8986]])
    got =
        [4352, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 446
# % 1100 x 0308 % 231A % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[4352, 776], [8986]])
    got =
        [4352, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 447
# % 1100 x 0300 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4352, 768]])
    got =
        [4352, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 448
# % 1100 x 0308 x 0300 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4352, 776, 768]])
    got =
        [4352, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 449
# % 1100 x 093C % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4352, 2364]])
    got =
        [4352, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 450
# % 1100 x 0308 x 093C % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4352, 776, 2364]])
    got =
        [4352, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 451
# % 1100 x 094D % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4352, 2381]])
    got =
        [4352, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 452
# % 1100 x 0308 x 094D % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4352, 776, 2381]])
    got =
        [4352, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 453
# % 1100 x 200D % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4352, 8205]])
    got =
        [4352, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 454
# % 1100 x 0308 x 200D % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4352, 776, 8205]])
    got =
        [4352, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 455
# % 1100 % 0378 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[4352], [888]])
    got =
        [4352, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 456
# % 1100 x 0308 % 0378 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[4352, 776], [888]])
    got =
        [4352, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 457
# % 1160 % 0020 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[4448], [32]])
    got =
        [4448, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 458
# % 1160 x 0308 % 0020 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[4448, 776], [32]])
    got =
        [4448, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 459
# % 1160 % 000D % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[4448], [13]])
    got =
        [4448, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 460
# % 1160 x 0308 % 000D % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[4448, 776], [13]])
    got =
        [4448, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 461
# % 1160 % 000A % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[4448], [10]])
    got =
        [4448, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 462
# % 1160 x 0308 % 000A % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[4448, 776], [10]])
    got =
        [4448, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 463
# % 1160 % 0001 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[4448], [1]])
    got =
        [4448, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 464
# % 1160 x 0308 % 0001 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[4448, 776], [1]])
    got =
        [4448, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 465
# % 1160 x 034F % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[4448, 847]])
    got =
        [4448, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 466
# % 1160 x 0308 x 034F % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[4448, 776, 847]])
    got =
        [4448, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 467
# % 1160 % 1F1E6 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[4448], [127462]])
    got =
        [4448, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 468
# % 1160 x 0308 % 1F1E6 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[4448, 776], [127462]])
    got =
        [4448, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 469
# % 1160 % 0600 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[4448], [1536]])
    got =
        [4448, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 470
# % 1160 x 0308 % 0600 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[4448, 776], [1536]])
    got =
        [4448, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 473
# % 1160 % 1100 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[4448], [4352]])
    got =
        [4448, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 474
# % 1160 x 0308 % 1100 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[4448, 776], [4352]])
    got =
        [4448, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 475
# % 1160 x 1160 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [7.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[4448, 4448]])
    got =
        [4448, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 476
# % 1160 x 0308 % 1160 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[4448, 776], [4448]])
    got =
        [4448, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 477
# % 1160 x 11A8 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [7.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[4448, 4520]])
    got =
        [4448, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 478
# % 1160 x 0308 % 11A8 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[4448, 776], [4520]])
    got =
        [4448, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 479
# % 1160 % AC00 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[4448], [44032]])
    got =
        [4448, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 480
# % 1160 x 0308 % AC00 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[4448, 776], [44032]])
    got =
        [4448, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 481
# % 1160 % AC01 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[4448], [44033]])
    got =
        [4448, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 482
# % 1160 x 0308 % AC01 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[4448, 776], [44033]])
    got =
        [4448, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 483
# % 1160 x 0900 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4448, 2304]])
    got =
        [4448, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 484
# % 1160 x 0308 x 0900 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4448, 776, 2304]])
    got =
        [4448, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 487
# % 1160 % 0904 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4448], [2308]])
    got =
        [4448, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 488
# % 1160 x 0308 % 0904 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4448, 776], [2308]])
    got =
        [4448, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 489
# % 1160 % 0D4E % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4448], [3406]])
    got =
        [4448, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 490
# % 1160 x 0308 % 0D4E % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4448, 776], [3406]])
    got =
        [4448, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 491
# % 1160 % 0915 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[4448], [2325]])
    got =
        [4448, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 492
# % 1160 x 0308 % 0915 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[4448, 776], [2325]])
    got =
        [4448, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 493
# % 1160 % 231A % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[4448], [8986]])
    got =
        [4448, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 494
# % 1160 x 0308 % 231A % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[4448, 776], [8986]])
    got =
        [4448, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 495
# % 1160 x 0300 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4448, 768]])
    got =
        [4448, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 496
# % 1160 x 0308 x 0300 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4448, 776, 768]])
    got =
        [4448, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 497
# % 1160 x 093C % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4448, 2364]])
    got =
        [4448, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 498
# % 1160 x 0308 x 093C % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4448, 776, 2364]])
    got =
        [4448, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 499
# % 1160 x 094D % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4448, 2381]])
    got =
        [4448, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 500
# % 1160 x 0308 x 094D % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4448, 776, 2381]])
    got =
        [4448, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 501
# % 1160 x 200D % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4448, 8205]])
    got =
        [4448, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 502
# % 1160 x 0308 x 200D % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4448, 776, 8205]])
    got =
        [4448, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 503
# % 1160 % 0378 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[4448], [888]])
    got =
        [4448, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 504
# % 1160 x 0308 % 0378 % #  % [0.2] HANGUL JUNGSEONG FILLER (V) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[4448, 776], [888]])
    got =
        [4448, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 505
# % 11A8 % 0020 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[4520], [32]])
    got =
        [4520, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 506
# % 11A8 x 0308 % 0020 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[4520, 776], [32]])
    got =
        [4520, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 507
# % 11A8 % 000D % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[4520], [13]])
    got =
        [4520, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 508
# % 11A8 x 0308 % 000D % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[4520, 776], [13]])
    got =
        [4520, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 509
# % 11A8 % 000A % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[4520], [10]])
    got =
        [4520, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 510
# % 11A8 x 0308 % 000A % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[4520, 776], [10]])
    got =
        [4520, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 511
# % 11A8 % 0001 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[4520], [1]])
    got =
        [4520, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 512
# % 11A8 x 0308 % 0001 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[4520, 776], [1]])
    got =
        [4520, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 513
# % 11A8 x 034F % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[4520, 847]])
    got =
        [4520, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 514
# % 11A8 x 0308 x 034F % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[4520, 776, 847]])
    got =
        [4520, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 515
# % 11A8 % 1F1E6 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[4520], [127462]])
    got =
        [4520, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 516
# % 11A8 x 0308 % 1F1E6 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[4520, 776], [127462]])
    got =
        [4520, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 517
# % 11A8 % 0600 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[4520], [1536]])
    got =
        [4520, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 518
# % 11A8 x 0308 % 0600 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[4520, 776], [1536]])
    got =
        [4520, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 521
# % 11A8 % 1100 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[4520], [4352]])
    got =
        [4520, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 522
# % 11A8 x 0308 % 1100 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[4520, 776], [4352]])
    got =
        [4520, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 523
# % 11A8 % 1160 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[4520], [4448]])
    got =
        [4520, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 524
# % 11A8 x 0308 % 1160 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[4520, 776], [4448]])
    got =
        [4520, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 525
# % 11A8 x 11A8 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [8.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[4520, 4520]])
    got =
        [4520, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 526
# % 11A8 x 0308 % 11A8 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[4520, 776], [4520]])
    got =
        [4520, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 527
# % 11A8 % AC00 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[4520], [44032]])
    got =
        [4520, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 528
# % 11A8 x 0308 % AC00 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[4520, 776], [44032]])
    got =
        [4520, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 529
# % 11A8 % AC01 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[4520], [44033]])
    got =
        [4520, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 530
# % 11A8 x 0308 % AC01 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[4520, 776], [44033]])
    got =
        [4520, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 531
# % 11A8 x 0900 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4520, 2304]])
    got =
        [4520, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 532
# % 11A8 x 0308 x 0900 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4520, 776, 2304]])
    got =
        [4520, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 535
# % 11A8 % 0904 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4520], [2308]])
    got =
        [4520, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 536
# % 11A8 x 0308 % 0904 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4520, 776], [2308]])
    got =
        [4520, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 537
# % 11A8 % 0D4E % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4520], [3406]])
    got =
        [4520, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 538
# % 11A8 x 0308 % 0D4E % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[4520, 776], [3406]])
    got =
        [4520, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 539
# % 11A8 % 0915 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[4520], [2325]])
    got =
        [4520, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 540
# % 11A8 x 0308 % 0915 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[4520, 776], [2325]])
    got =
        [4520, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 541
# % 11A8 % 231A % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[4520], [8986]])
    got =
        [4520, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 542
# % 11A8 x 0308 % 231A % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[4520, 776], [8986]])
    got =
        [4520, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 543
# % 11A8 x 0300 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4520, 768]])
    got =
        [4520, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 544
# % 11A8 x 0308 x 0300 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4520, 776, 768]])
    got =
        [4520, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 545
# % 11A8 x 093C % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4520, 2364]])
    got =
        [4520, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 546
# % 11A8 x 0308 x 093C % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4520, 776, 2364]])
    got =
        [4520, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 547
# % 11A8 x 094D % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4520, 2381]])
    got =
        [4520, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 548
# % 11A8 x 0308 x 094D % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4520, 776, 2381]])
    got =
        [4520, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 549
# % 11A8 x 200D % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4520, 8205]])
    got =
        [4520, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 550
# % 11A8 x 0308 x 200D % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[4520, 776, 8205]])
    got =
        [4520, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 551
# % 11A8 % 0378 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[4520], [888]])
    got =
        [4520, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 552
# % 11A8 x 0308 % 0378 % #  % [0.2] HANGUL JONGSEONG KIYEOK (T) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[4520, 776], [888]])
    got =
        [4520, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 553
# % AC00 % 0020 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[44032], [32]])
    got =
        [44032, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 554
# % AC00 x 0308 % 0020 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[44032, 776], [32]])
    got =
        [44032, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 555
# % AC00 % 000D % #  % [0.2] HANGUL SYLLABLE GA (LV) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[44032], [13]])
    got =
        [44032, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 556
# % AC00 x 0308 % 000D % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[44032, 776], [13]])
    got =
        [44032, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 557
# % AC00 % 000A % #  % [0.2] HANGUL SYLLABLE GA (LV) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[44032], [10]])
    got =
        [44032, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 558
# % AC00 x 0308 % 000A % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[44032, 776], [10]])
    got =
        [44032, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 559
# % AC00 % 0001 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[44032], [1]])
    got =
        [44032, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 560
# % AC00 x 0308 % 0001 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[44032, 776], [1]])
    got =
        [44032, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 561
# % AC00 x 034F % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[44032, 847]])
    got =
        [44032, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 562
# % AC00 x 0308 x 034F % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[44032, 776, 847]])
    got =
        [44032, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 563
# % AC00 % 1F1E6 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[44032], [127462]])
    got =
        [44032, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 564
# % AC00 x 0308 % 1F1E6 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[44032, 776], [127462]])
    got =
        [44032, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 565
# % AC00 % 0600 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[44032], [1536]])
    got =
        [44032, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 566
# % AC00 x 0308 % 0600 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[44032, 776], [1536]])
    got =
        [44032, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 569
# % AC00 % 1100 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[44032], [4352]])
    got =
        [44032, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 570
# % AC00 x 0308 % 1100 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[44032, 776], [4352]])
    got =
        [44032, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 571
# % AC00 x 1160 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [7.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[44032, 4448]])
    got =
        [44032, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 572
# % AC00 x 0308 % 1160 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[44032, 776], [4448]])
    got =
        [44032, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 573
# % AC00 x 11A8 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [7.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[44032, 4520]])
    got =
        [44032, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 574
# % AC00 x 0308 % 11A8 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[44032, 776], [4520]])
    got =
        [44032, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 575
# % AC00 % AC00 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[44032], [44032]])
    got =
        [44032, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 576
# % AC00 x 0308 % AC00 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[44032, 776], [44032]])
    got =
        [44032, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 577
# % AC00 % AC01 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[44032], [44033]])
    got =
        [44032, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 578
# % AC00 x 0308 % AC01 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[44032, 776], [44033]])
    got =
        [44032, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 579
# % AC00 x 0900 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44032, 2304]])
    got =
        [44032, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 580
# % AC00 x 0308 x 0900 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44032, 776, 2304]])
    got =
        [44032, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 583
# % AC00 % 0904 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44032], [2308]])
    got =
        [44032, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 584
# % AC00 x 0308 % 0904 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44032, 776], [2308]])
    got =
        [44032, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 585
# % AC00 % 0D4E % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44032], [3406]])
    got =
        [44032, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 586
# % AC00 x 0308 % 0D4E % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44032, 776], [3406]])
    got =
        [44032, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 587
# % AC00 % 0915 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[44032], [2325]])
    got =
        [44032, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 588
# % AC00 x 0308 % 0915 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[44032, 776], [2325]])
    got =
        [44032, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 589
# % AC00 % 231A % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[44032], [8986]])
    got =
        [44032, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 590
# % AC00 x 0308 % 231A % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[44032, 776], [8986]])
    got =
        [44032, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 591
# % AC00 x 0300 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44032, 768]])
    got =
        [44032, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 592
# % AC00 x 0308 x 0300 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44032, 776, 768]])
    got =
        [44032, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 593
# % AC00 x 093C % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44032, 2364]])
    got =
        [44032, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 594
# % AC00 x 0308 x 093C % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44032, 776, 2364]])
    got =
        [44032, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 595
# % AC00 x 094D % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44032, 2381]])
    got =
        [44032, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 596
# % AC00 x 0308 x 094D % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44032, 776, 2381]])
    got =
        [44032, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 597
# % AC00 x 200D % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44032, 8205]])
    got =
        [44032, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 598
# % AC00 x 0308 x 200D % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44032, 776, 8205]])
    got =
        [44032, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 599
# % AC00 % 0378 % #  % [0.2] HANGUL SYLLABLE GA (LV) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[44032], [888]])
    got =
        [44032, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 600
# % AC00 x 0308 % 0378 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[44032, 776], [888]])
    got =
        [44032, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 601
# % AC01 % 0020 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[44033], [32]])
    got =
        [44033, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 602
# % AC01 x 0308 % 0020 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[44033, 776], [32]])
    got =
        [44033, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 603
# % AC01 % 000D % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[44033], [13]])
    got =
        [44033, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 604
# % AC01 x 0308 % 000D % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[44033, 776], [13]])
    got =
        [44033, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 605
# % AC01 % 000A % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[44033], [10]])
    got =
        [44033, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 606
# % AC01 x 0308 % 000A % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[44033, 776], [10]])
    got =
        [44033, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 607
# % AC01 % 0001 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[44033], [1]])
    got =
        [44033, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 608
# % AC01 x 0308 % 0001 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[44033, 776], [1]])
    got =
        [44033, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 609
# % AC01 x 034F % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[44033, 847]])
    got =
        [44033, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 610
# % AC01 x 0308 x 034F % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[44033, 776, 847]])
    got =
        [44033, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 611
# % AC01 % 1F1E6 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[44033], [127462]])
    got =
        [44033, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 612
# % AC01 x 0308 % 1F1E6 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[44033, 776], [127462]])
    got =
        [44033, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 613
# % AC01 % 0600 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[44033], [1536]])
    got =
        [44033, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 614
# % AC01 x 0308 % 0600 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[44033, 776], [1536]])
    got =
        [44033, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 617
# % AC01 % 1100 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[44033], [4352]])
    got =
        [44033, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 618
# % AC01 x 0308 % 1100 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[44033, 776], [4352]])
    got =
        [44033, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 619
# % AC01 % 1160 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[44033], [4448]])
    got =
        [44033, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 620
# % AC01 x 0308 % 1160 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[44033, 776], [4448]])
    got =
        [44033, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 621
# % AC01 x 11A8 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [8.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[44033, 4520]])
    got =
        [44033, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 622
# % AC01 x 0308 % 11A8 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[44033, 776], [4520]])
    got =
        [44033, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 623
# % AC01 % AC00 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[44033], [44032]])
    got =
        [44033, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 624
# % AC01 x 0308 % AC00 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[44033, 776], [44032]])
    got =
        [44033, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 625
# % AC01 % AC01 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[44033], [44033]])
    got =
        [44033, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 626
# % AC01 x 0308 % AC01 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[44033, 776], [44033]])
    got =
        [44033, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 627
# % AC01 x 0900 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44033, 2304]])
    got =
        [44033, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 628
# % AC01 x 0308 x 0900 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44033, 776, 2304]])
    got =
        [44033, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 631
# % AC01 % 0904 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44033], [2308]])
    got =
        [44033, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 632
# % AC01 x 0308 % 0904 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44033, 776], [2308]])
    got =
        [44033, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 633
# % AC01 % 0D4E % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44033], [3406]])
    got =
        [44033, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 634
# % AC01 x 0308 % 0D4E % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[44033, 776], [3406]])
    got =
        [44033, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 635
# % AC01 % 0915 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[44033], [2325]])
    got =
        [44033, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 636
# % AC01 x 0308 % 0915 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[44033, 776], [2325]])
    got =
        [44033, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 637
# % AC01 % 231A % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[44033], [8986]])
    got =
        [44033, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 638
# % AC01 x 0308 % 231A % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[44033, 776], [8986]])
    got =
        [44033, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 639
# % AC01 x 0300 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44033, 768]])
    got =
        [44033, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 640
# % AC01 x 0308 x 0300 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44033, 776, 768]])
    got =
        [44033, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 641
# % AC01 x 093C % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44033, 2364]])
    got =
        [44033, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 642
# % AC01 x 0308 x 093C % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44033, 776, 2364]])
    got =
        [44033, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 643
# % AC01 x 094D % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44033, 2381]])
    got =
        [44033, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 644
# % AC01 x 0308 x 094D % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44033, 776, 2381]])
    got =
        [44033, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 645
# % AC01 x 200D % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44033, 8205]])
    got =
        [44033, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 646
# % AC01 x 0308 x 200D % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[44033, 776, 8205]])
    got =
        [44033, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 647
# % AC01 % 0378 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[44033], [888]])
    got =
        [44033, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 648
# % AC01 x 0308 % 0378 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[44033, 776], [888]])
    got =
        [44033, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 649
# % 0900 % 0020 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2304], [32]])
    got =
        [2304, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 650
# % 0900 x 0308 % 0020 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2304, 776], [32]])
    got =
        [2304, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 651
# % 0900 % 000D % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2304], [13]])
    got =
        [2304, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 652
# % 0900 x 0308 % 000D % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2304, 776], [13]])
    got =
        [2304, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 653
# % 0900 % 000A % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2304], [10]])
    got =
        [2304, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 654
# % 0900 x 0308 % 000A % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2304, 776], [10]])
    got =
        [2304, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 655
# % 0900 % 0001 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2304], [1]])
    got =
        [2304, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 656
# % 0900 x 0308 % 0001 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2304, 776], [1]])
    got =
        [2304, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 657
# % 0900 x 034F % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2304, 847]])
    got =
        [2304, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 658
# % 0900 x 0308 x 034F % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2304, 776, 847]])
    got =
        [2304, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 659
# % 0900 % 1F1E6 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2304], [127462]])
    got =
        [2304, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 660
# % 0900 x 0308 % 1F1E6 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2304, 776], [127462]])
    got =
        [2304, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 661
# % 0900 % 0600 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2304], [1536]])
    got =
        [2304, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 662
# % 0900 x 0308 % 0600 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2304, 776], [1536]])
    got =
        [2304, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 665
# % 0900 % 1100 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2304], [4352]])
    got =
        [2304, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 666
# % 0900 x 0308 % 1100 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2304, 776], [4352]])
    got =
        [2304, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 667
# % 0900 % 1160 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2304], [4448]])
    got =
        [2304, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 668
# % 0900 x 0308 % 1160 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2304, 776], [4448]])
    got =
        [2304, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 669
# % 0900 % 11A8 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2304], [4520]])
    got =
        [2304, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 670
# % 0900 x 0308 % 11A8 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2304, 776], [4520]])
    got =
        [2304, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 671
# % 0900 % AC00 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2304], [44032]])
    got =
        [2304, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 672
# % 0900 x 0308 % AC00 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2304, 776], [44032]])
    got =
        [2304, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 673
# % 0900 % AC01 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2304], [44033]])
    got =
        [2304, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 674
# % 0900 x 0308 % AC01 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2304, 776], [44033]])
    got =
        [2304, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 675
# % 0900 x 0900 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2304, 2304]])
    got =
        [2304, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 676
# % 0900 x 0308 x 0900 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2304, 776, 2304]])
    got =
        [2304, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 679
# % 0900 % 0904 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2304], [2308]])
    got =
        [2304, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 680
# % 0900 x 0308 % 0904 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2304, 776], [2308]])
    got =
        [2304, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 681
# % 0900 % 0D4E % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2304], [3406]])
    got =
        [2304, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 682
# % 0900 x 0308 % 0D4E % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2304, 776], [3406]])
    got =
        [2304, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 683
# % 0900 % 0915 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2304], [2325]])
    got =
        [2304, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 684
# % 0900 x 0308 % 0915 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2304, 776], [2325]])
    got =
        [2304, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 685
# % 0900 % 231A % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2304], [8986]])
    got =
        [2304, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 686
# % 0900 x 0308 % 231A % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2304, 776], [8986]])
    got =
        [2304, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 687
# % 0900 x 0300 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2304, 768]])
    got =
        [2304, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 688
# % 0900 x 0308 x 0300 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2304, 776, 768]])
    got =
        [2304, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 689
# % 0900 x 093C % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2304, 2364]])
    got =
        [2304, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 690
# % 0900 x 0308 x 093C % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2304, 776, 2364]])
    got =
        [2304, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 691
# % 0900 x 094D % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2304, 2381]])
    got =
        [2304, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 692
# % 0900 x 0308 x 094D % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2304, 776, 2381]])
    got =
        [2304, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 693
# % 0900 x 200D % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2304, 8205]])
    got =
        [2304, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 694
# % 0900 x 0308 x 200D % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2304, 776, 8205]])
    got =
        [2304, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 695
# % 0900 % 0378 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2304], [888]])
    got =
        [2304, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 696
# % 0900 x 0308 % 0378 % #  % [0.2] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2304, 776], [888]])
    got =
        [2304, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 697
# % 0903 % 0020 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2307], [32]])
    got =
        [2307, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 698
# % 0903 x 0308 % 0020 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2307, 776], [32]])
    got =
        [2307, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 699
# % 0903 % 000D % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2307], [13]])
    got =
        [2307, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 700
# % 0903 x 0308 % 000D % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2307, 776], [13]])
    got =
        [2307, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 701
# % 0903 % 000A % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2307], [10]])
    got =
        [2307, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 702
# % 0903 x 0308 % 000A % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2307, 776], [10]])
    got =
        [2307, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 703
# % 0903 % 0001 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2307], [1]])
    got =
        [2307, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 704
# % 0903 x 0308 % 0001 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2307, 776], [1]])
    got =
        [2307, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 705
# % 0903 x 034F % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2307, 847]])
    got =
        [2307, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 706
# % 0903 x 0308 x 034F % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2307, 776, 847]])
    got =
        [2307, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 707
# % 0903 % 1F1E6 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2307], [127462]])
    got =
        [2307, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 708
# % 0903 x 0308 % 1F1E6 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2307, 776], [127462]])
    got =
        [2307, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 709
# % 0903 % 0600 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2307], [1536]])
    got =
        [2307, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 710
# % 0903 x 0308 % 0600 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2307, 776], [1536]])
    got =
        [2307, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 713
# % 0903 % 1100 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2307], [4352]])
    got =
        [2307, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 714
# % 0903 x 0308 % 1100 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2307, 776], [4352]])
    got =
        [2307, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 715
# % 0903 % 1160 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2307], [4448]])
    got =
        [2307, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 716
# % 0903 x 0308 % 1160 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2307, 776], [4448]])
    got =
        [2307, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 717
# % 0903 % 11A8 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2307], [4520]])
    got =
        [2307, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 718
# % 0903 x 0308 % 11A8 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2307, 776], [4520]])
    got =
        [2307, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 719
# % 0903 % AC00 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2307], [44032]])
    got =
        [2307, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 720
# % 0903 x 0308 % AC00 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2307, 776], [44032]])
    got =
        [2307, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 721
# % 0903 % AC01 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2307], [44033]])
    got =
        [2307, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 722
# % 0903 x 0308 % AC01 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2307, 776], [44033]])
    got =
        [2307, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 723
# % 0903 x 0900 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2307, 2304]])
    got =
        [2307, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 724
# % 0903 x 0308 x 0900 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2307, 776, 2304]])
    got =
        [2307, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 727
# % 0903 % 0904 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2307], [2308]])
    got =
        [2307, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 728
# % 0903 x 0308 % 0904 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2307, 776], [2308]])
    got =
        [2307, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 729
# % 0903 % 0D4E % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2307], [3406]])
    got =
        [2307, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 730
# % 0903 x 0308 % 0D4E % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2307, 776], [3406]])
    got =
        [2307, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 731
# % 0903 % 0915 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2307], [2325]])
    got =
        [2307, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 732
# % 0903 x 0308 % 0915 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2307, 776], [2325]])
    got =
        [2307, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 733
# % 0903 % 231A % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2307], [8986]])
    got =
        [2307, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 734
# % 0903 x 0308 % 231A % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2307, 776], [8986]])
    got =
        [2307, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 735
# % 0903 x 0300 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2307, 768]])
    got =
        [2307, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 736
# % 0903 x 0308 x 0300 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2307, 776, 768]])
    got =
        [2307, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 737
# % 0903 x 093C % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2307, 2364]])
    got =
        [2307, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 738
# % 0903 x 0308 x 093C % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2307, 776, 2364]])
    got =
        [2307, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 739
# % 0903 x 094D % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2307, 2381]])
    got =
        [2307, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 740
# % 0903 x 0308 x 094D % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2307, 776, 2381]])
    got =
        [2307, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 741
# % 0903 x 200D % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2307, 8205]])
    got =
        [2307, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 742
# % 0903 x 0308 x 200D % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2307, 776, 8205]])
    got =
        [2307, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 743
# % 0903 % 0378 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2307], [888]])
    got =
        [2307, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 744
# % 0903 x 0308 % 0378 % #  % [0.2] DEVANAGARI SIGN VISARGA (SpacingMark_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2307, 776], [888]])
    got =
        [2307, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 745
# % 0904 % 0020 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2308], [32]])
    got =
        [2308, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 746
# % 0904 x 0308 % 0020 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2308, 776], [32]])
    got =
        [2308, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 747
# % 0904 % 000D % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2308], [13]])
    got =
        [2308, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 748
# % 0904 x 0308 % 000D % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2308, 776], [13]])
    got =
        [2308, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 749
# % 0904 % 000A % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2308], [10]])
    got =
        [2308, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 750
# % 0904 x 0308 % 000A % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2308, 776], [10]])
    got =
        [2308, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 751
# % 0904 % 0001 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2308], [1]])
    got =
        [2308, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 752
# % 0904 x 0308 % 0001 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2308, 776], [1]])
    got =
        [2308, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 753
# % 0904 x 034F % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2308, 847]])
    got =
        [2308, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 754
# % 0904 x 0308 x 034F % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2308, 776, 847]])
    got =
        [2308, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 755
# % 0904 % 1F1E6 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2308], [127462]])
    got =
        [2308, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 756
# % 0904 x 0308 % 1F1E6 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2308, 776], [127462]])
    got =
        [2308, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 757
# % 0904 % 0600 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2308], [1536]])
    got =
        [2308, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 758
# % 0904 x 0308 % 0600 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2308, 776], [1536]])
    got =
        [2308, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 761
# % 0904 % 1100 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2308], [4352]])
    got =
        [2308, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 762
# % 0904 x 0308 % 1100 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2308, 776], [4352]])
    got =
        [2308, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 763
# % 0904 % 1160 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2308], [4448]])
    got =
        [2308, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 764
# % 0904 x 0308 % 1160 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2308, 776], [4448]])
    got =
        [2308, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 765
# % 0904 % 11A8 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2308], [4520]])
    got =
        [2308, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 766
# % 0904 x 0308 % 11A8 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2308, 776], [4520]])
    got =
        [2308, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 767
# % 0904 % AC00 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2308], [44032]])
    got =
        [2308, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 768
# % 0904 x 0308 % AC00 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2308, 776], [44032]])
    got =
        [2308, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 769
# % 0904 % AC01 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2308], [44033]])
    got =
        [2308, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 770
# % 0904 x 0308 % AC01 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2308, 776], [44033]])
    got =
        [2308, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 771
# % 0904 x 0900 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2308, 2304]])
    got =
        [2308, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 772
# % 0904 x 0308 x 0900 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2308, 776, 2304]])
    got =
        [2308, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 775
# % 0904 % 0904 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2308], [2308]])
    got =
        [2308, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 776
# % 0904 x 0308 % 0904 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2308, 776], [2308]])
    got =
        [2308, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 777
# % 0904 % 0D4E % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2308], [3406]])
    got =
        [2308, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 778
# % 0904 x 0308 % 0D4E % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2308, 776], [3406]])
    got =
        [2308, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 779
# % 0904 % 0915 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2308], [2325]])
    got =
        [2308, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 780
# % 0904 x 0308 % 0915 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2308, 776], [2325]])
    got =
        [2308, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 781
# % 0904 % 231A % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2308], [8986]])
    got =
        [2308, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 782
# % 0904 x 0308 % 231A % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2308, 776], [8986]])
    got =
        [2308, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 783
# % 0904 x 0300 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2308, 768]])
    got =
        [2308, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 784
# % 0904 x 0308 x 0300 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2308, 776, 768]])
    got =
        [2308, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 785
# % 0904 x 093C % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2308, 2364]])
    got =
        [2308, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 786
# % 0904 x 0308 x 093C % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2308, 776, 2364]])
    got =
        [2308, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 787
# % 0904 x 094D % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2308, 2381]])
    got =
        [2308, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 788
# % 0904 x 0308 x 094D % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2308, 776, 2381]])
    got =
        [2308, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 789
# % 0904 x 200D % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2308, 8205]])
    got =
        [2308, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 790
# % 0904 x 0308 x 200D % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2308, 776, 8205]])
    got =
        [2308, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 791
# % 0904 % 0378 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2308], [888]])
    got =
        [2308, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 792
# % 0904 x 0308 % 0378 % #  % [0.2] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2308, 776], [888]])
    got =
        [2308, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 794
# % 0D4E x 0308 % 0020 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[3406, 776], [32]])
    got =
        [3406, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 795
# % 0D4E % 000D % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[3406], [13]])
    got =
        [3406, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 796
# % 0D4E x 0308 % 000D % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[3406, 776], [13]])
    got =
        [3406, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 797
# % 0D4E % 000A % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[3406], [10]])
    got =
        [3406, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 798
# % 0D4E x 0308 % 000A % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[3406, 776], [10]])
    got =
        [3406, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 799
# % 0D4E % 0001 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[3406], [1]])
    got =
        [3406, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 800
# % 0D4E x 0308 % 0001 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[3406, 776], [1]])
    got =
        [3406, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 801
# % 0D4E x 034F % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[3406, 847]])
    got =
        [3406, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 802
# % 0D4E x 0308 x 034F % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[3406, 776, 847]])
    got =
        [3406, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 804
# % 0D4E x 0308 % 1F1E6 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[3406, 776], [127462]])
    got =
        [3406, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 806
# % 0D4E x 0308 % 0600 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[3406, 776], [1536]])
    got =
        [3406, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 810
# % 0D4E x 0308 % 1100 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[3406, 776], [4352]])
    got =
        [3406, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 812
# % 0D4E x 0308 % 1160 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[3406, 776], [4448]])
    got =
        [3406, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 814
# % 0D4E x 0308 % 11A8 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[3406, 776], [4520]])
    got =
        [3406, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 816
# % 0D4E x 0308 % AC00 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[3406, 776], [44032]])
    got =
        [3406, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 818
# % 0D4E x 0308 % AC01 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[3406, 776], [44033]])
    got =
        [3406, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 819
# % 0D4E x 0900 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[3406, 2304]])
    got =
        [3406, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 820
# % 0D4E x 0308 x 0900 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[3406, 776, 2304]])
    got =
        [3406, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 824
# % 0D4E x 0308 % 0904 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[3406, 776], [2308]])
    got =
        [3406, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 826
# % 0D4E x 0308 % 0D4E % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[3406, 776], [3406]])
    got =
        [3406, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 828
# % 0D4E x 0308 % 0915 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[3406, 776], [2325]])
    got =
        [3406, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 830
# % 0D4E x 0308 % 231A % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[3406, 776], [8986]])
    got =
        [3406, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 831
# % 0D4E x 0300 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[3406, 768]])
    got =
        [3406, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 832
# % 0D4E x 0308 x 0300 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[3406, 776, 768]])
    got =
        [3406, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 833
# % 0D4E x 093C % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[3406, 2364]])
    got =
        [3406, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 834
# % 0D4E x 0308 x 093C % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[3406, 776, 2364]])
    got =
        [3406, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 835
# % 0D4E x 094D % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[3406, 2381]])
    got =
        [3406, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 836
# % 0D4E x 0308 x 094D % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[3406, 776, 2381]])
    got =
        [3406, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 837
# % 0D4E x 200D % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[3406, 8205]])
    got =
        [3406, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 838
# % 0D4E x 0308 x 200D % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[3406, 776, 8205]])
    got =
        [3406, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 840
# % 0D4E x 0308 % 0378 % #  % [0.2] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[3406, 776], [888]])
    got =
        [3406, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 841
# % 0915 % 0020 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2325], [32]])
    got =
        [2325, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 842
# % 0915 x 0308 % 0020 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2325, 776], [32]])
    got =
        [2325, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 843
# % 0915 % 000D % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2325], [13]])
    got =
        [2325, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 844
# % 0915 x 0308 % 000D % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2325, 776], [13]])
    got =
        [2325, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 845
# % 0915 % 000A % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2325], [10]])
    got =
        [2325, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 846
# % 0915 x 0308 % 000A % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2325, 776], [10]])
    got =
        [2325, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 847
# % 0915 % 0001 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2325], [1]])
    got =
        [2325, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 848
# % 0915 x 0308 % 0001 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2325, 776], [1]])
    got =
        [2325, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 849
# % 0915 x 034F % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2325, 847]])
    got =
        [2325, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 850
# % 0915 x 0308 x 034F % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2325, 776, 847]])
    got =
        [2325, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 851
# % 0915 % 1F1E6 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2325], [127462]])
    got =
        [2325, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 852
# % 0915 x 0308 % 1F1E6 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2325, 776], [127462]])
    got =
        [2325, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 853
# % 0915 % 0600 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2325], [1536]])
    got =
        [2325, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 854
# % 0915 x 0308 % 0600 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2325, 776], [1536]])
    got =
        [2325, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 857
# % 0915 % 1100 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2325], [4352]])
    got =
        [2325, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 858
# % 0915 x 0308 % 1100 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2325, 776], [4352]])
    got =
        [2325, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 859
# % 0915 % 1160 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2325], [4448]])
    got =
        [2325, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 860
# % 0915 x 0308 % 1160 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2325, 776], [4448]])
    got =
        [2325, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 861
# % 0915 % 11A8 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2325], [4520]])
    got =
        [2325, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 862
# % 0915 x 0308 % 11A8 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2325, 776], [4520]])
    got =
        [2325, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 863
# % 0915 % AC00 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2325], [44032]])
    got =
        [2325, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 864
# % 0915 x 0308 % AC00 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2325, 776], [44032]])
    got =
        [2325, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 865
# % 0915 % AC01 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2325], [44033]])
    got =
        [2325, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 866
# % 0915 x 0308 % AC01 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2325, 776], [44033]])
    got =
        [2325, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 867
# % 0915 x 0900 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2325, 2304]])
    got =
        [2325, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 868
# % 0915 x 0308 x 0900 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2325, 776, 2304]])
    got =
        [2325, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 871
# % 0915 % 0904 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2325], [2308]])
    got =
        [2325, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 872
# % 0915 x 0308 % 0904 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2325, 776], [2308]])
    got =
        [2325, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 873
# % 0915 % 0D4E % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2325], [3406]])
    got =
        [2325, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 874
# % 0915 x 0308 % 0D4E % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2325, 776], [3406]])
    got =
        [2325, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 875
# % 0915 % 0915 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2325], [2325]])
    got =
        [2325, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 876
# % 0915 x 0308 % 0915 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2325, 776], [2325]])
    got =
        [2325, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 877
# % 0915 % 231A % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2325], [8986]])
    got =
        [2325, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 878
# % 0915 x 0308 % 231A % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2325, 776], [8986]])
    got =
        [2325, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 879
# % 0915 x 0300 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2325, 768]])
    got =
        [2325, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 880
# % 0915 x 0308 x 0300 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2325, 776, 768]])
    got =
        [2325, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 881
# % 0915 x 093C % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2325, 2364]])
    got =
        [2325, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 882
# % 0915 x 0308 x 093C % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2325, 776, 2364]])
    got =
        [2325, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 883
# % 0915 x 094D % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2325, 2381]])
    got =
        [2325, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 884
# % 0915 x 0308 x 094D % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2325, 776, 2381]])
    got =
        [2325, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 885
# % 0915 x 200D % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2325, 8205]])
    got =
        [2325, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 886
# % 0915 x 0308 x 200D % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2325, 776, 8205]])
    got =
        [2325, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 887
# % 0915 % 0378 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2325], [888]])
    got =
        [2325, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 888
# % 0915 x 0308 % 0378 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2325, 776], [888]])
    got =
        [2325, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 889
# % 231A % 0020 % #  % [0.2] WATCH (ExtPict) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[8986], [32]])
    got =
        [8986, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 890
# % 231A x 0308 % 0020 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[8986, 776], [32]])
    got =
        [8986, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 891
# % 231A % 000D % #  % [0.2] WATCH (ExtPict) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[8986], [13]])
    got =
        [8986, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 892
# % 231A x 0308 % 000D % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[8986, 776], [13]])
    got =
        [8986, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 893
# % 231A % 000A % #  % [0.2] WATCH (ExtPict) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[8986], [10]])
    got =
        [8986, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 894
# % 231A x 0308 % 000A % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[8986, 776], [10]])
    got =
        [8986, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 895
# % 231A % 0001 % #  % [0.2] WATCH (ExtPict) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[8986], [1]])
    got =
        [8986, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 896
# % 231A x 0308 % 0001 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[8986, 776], [1]])
    got =
        [8986, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 897
# % 231A x 034F % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[8986, 847]])
    got =
        [8986, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 898
# % 231A x 0308 x 034F % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[8986, 776, 847]])
    got =
        [8986, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 899
# % 231A % 1F1E6 % #  % [0.2] WATCH (ExtPict) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[8986], [127462]])
    got =
        [8986, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 900
# % 231A x 0308 % 1F1E6 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[8986, 776], [127462]])
    got =
        [8986, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 901
# % 231A % 0600 % #  % [0.2] WATCH (ExtPict) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[8986], [1536]])
    got =
        [8986, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 902
# % 231A x 0308 % 0600 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[8986, 776], [1536]])
    got =
        [8986, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 905
# % 231A % 1100 % #  % [0.2] WATCH (ExtPict) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[8986], [4352]])
    got =
        [8986, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 906
# % 231A x 0308 % 1100 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[8986, 776], [4352]])
    got =
        [8986, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 907
# % 231A % 1160 % #  % [0.2] WATCH (ExtPict) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[8986], [4448]])
    got =
        [8986, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 908
# % 231A x 0308 % 1160 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[8986, 776], [4448]])
    got =
        [8986, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 909
# % 231A % 11A8 % #  % [0.2] WATCH (ExtPict) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[8986], [4520]])
    got =
        [8986, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 910
# % 231A x 0308 % 11A8 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[8986, 776], [4520]])
    got =
        [8986, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 911
# % 231A % AC00 % #  % [0.2] WATCH (ExtPict) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[8986], [44032]])
    got =
        [8986, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 912
# % 231A x 0308 % AC00 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[8986, 776], [44032]])
    got =
        [8986, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 913
# % 231A % AC01 % #  % [0.2] WATCH (ExtPict) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[8986], [44033]])
    got =
        [8986, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 914
# % 231A x 0308 % AC01 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[8986, 776], [44033]])
    got =
        [8986, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 915
# % 231A x 0900 % #  % [0.2] WATCH (ExtPict) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8986, 2304]])
    got =
        [8986, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 916
# % 231A x 0308 x 0900 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8986, 776, 2304]])
    got =
        [8986, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 919
# % 231A % 0904 % #  % [0.2] WATCH (ExtPict) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8986], [2308]])
    got =
        [8986, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 920
# % 231A x 0308 % 0904 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8986, 776], [2308]])
    got =
        [8986, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 921
# % 231A % 0D4E % #  % [0.2] WATCH (ExtPict) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8986], [3406]])
    got =
        [8986, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 922
# % 231A x 0308 % 0D4E % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8986, 776], [3406]])
    got =
        [8986, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 923
# % 231A % 0915 % #  % [0.2] WATCH (ExtPict) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[8986], [2325]])
    got =
        [8986, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 924
# % 231A x 0308 % 0915 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[8986, 776], [2325]])
    got =
        [8986, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 925
# % 231A % 231A % #  % [0.2] WATCH (ExtPict) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[8986], [8986]])
    got =
        [8986, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 926
# % 231A x 0308 % 231A % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[8986, 776], [8986]])
    got =
        [8986, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 927
# % 231A x 0300 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8986, 768]])
    got =
        [8986, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 928
# % 231A x 0308 x 0300 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8986, 776, 768]])
    got =
        [8986, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 929
# % 231A x 093C % #  % [0.2] WATCH (ExtPict) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8986, 2364]])
    got =
        [8986, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 930
# % 231A x 0308 x 093C % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8986, 776, 2364]])
    got =
        [8986, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 931
# % 231A x 094D % #  % [0.2] WATCH (ExtPict) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8986, 2381]])
    got =
        [8986, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 932
# % 231A x 0308 x 094D % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8986, 776, 2381]])
    got =
        [8986, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 933
# % 231A x 200D % #  % [0.2] WATCH (ExtPict) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8986, 8205]])
    got =
        [8986, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 934
# % 231A x 0308 x 200D % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8986, 776, 8205]])
    got =
        [8986, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 935
# % 231A % 0378 % #  % [0.2] WATCH (ExtPict) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[8986], [888]])
    got =
        [8986, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 936
# % 231A x 0308 % 0378 % #  % [0.2] WATCH (ExtPict) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[8986, 776], [888]])
    got =
        [8986, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 937
# % 0300 % 0020 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[768], [32]])
    got =
        [768, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 938
# % 0300 x 0308 % 0020 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[768, 776], [32]])
    got =
        [768, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 939
# % 0300 % 000D % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[768], [13]])
    got =
        [768, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 940
# % 0300 x 0308 % 000D % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[768, 776], [13]])
    got =
        [768, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 941
# % 0300 % 000A % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[768], [10]])
    got =
        [768, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 942
# % 0300 x 0308 % 000A % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[768, 776], [10]])
    got =
        [768, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 943
# % 0300 % 0001 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[768], [1]])
    got =
        [768, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 944
# % 0300 x 0308 % 0001 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[768, 776], [1]])
    got =
        [768, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 945
# % 0300 x 034F % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[768, 847]])
    got =
        [768, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 946
# % 0300 x 0308 x 034F % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[768, 776, 847]])
    got =
        [768, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 947
# % 0300 % 1F1E6 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[768], [127462]])
    got =
        [768, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 948
# % 0300 x 0308 % 1F1E6 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[768, 776], [127462]])
    got =
        [768, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 949
# % 0300 % 0600 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[768], [1536]])
    got =
        [768, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 950
# % 0300 x 0308 % 0600 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[768, 776], [1536]])
    got =
        [768, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 953
# % 0300 % 1100 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[768], [4352]])
    got =
        [768, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 954
# % 0300 x 0308 % 1100 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[768, 776], [4352]])
    got =
        [768, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 955
# % 0300 % 1160 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[768], [4448]])
    got =
        [768, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 956
# % 0300 x 0308 % 1160 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[768, 776], [4448]])
    got =
        [768, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 957
# % 0300 % 11A8 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[768], [4520]])
    got =
        [768, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 958
# % 0300 x 0308 % 11A8 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[768, 776], [4520]])
    got =
        [768, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 959
# % 0300 % AC00 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[768], [44032]])
    got =
        [768, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 960
# % 0300 x 0308 % AC00 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[768, 776], [44032]])
    got =
        [768, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 961
# % 0300 % AC01 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[768], [44033]])
    got =
        [768, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 962
# % 0300 x 0308 % AC01 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[768, 776], [44033]])
    got =
        [768, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 963
# % 0300 x 0900 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[768, 2304]])
    got =
        [768, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 964
# % 0300 x 0308 x 0900 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[768, 776, 2304]])
    got =
        [768, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 967
# % 0300 % 0904 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[768], [2308]])
    got =
        [768, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 968
# % 0300 x 0308 % 0904 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[768, 776], [2308]])
    got =
        [768, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 969
# % 0300 % 0D4E % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[768], [3406]])
    got =
        [768, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 970
# % 0300 x 0308 % 0D4E % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[768, 776], [3406]])
    got =
        [768, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 971
# % 0300 % 0915 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[768], [2325]])
    got =
        [768, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 972
# % 0300 x 0308 % 0915 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[768, 776], [2325]])
    got =
        [768, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 973
# % 0300 % 231A % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[768], [8986]])
    got =
        [768, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 974
# % 0300 x 0308 % 231A % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[768, 776], [8986]])
    got =
        [768, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 975
# % 0300 x 0300 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[768, 768]])
    got =
        [768, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 976
# % 0300 x 0308 x 0300 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[768, 776, 768]])
    got =
        [768, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 977
# % 0300 x 093C % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[768, 2364]])
    got =
        [768, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 978
# % 0300 x 0308 x 093C % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[768, 776, 2364]])
    got =
        [768, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 979
# % 0300 x 094D % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[768, 2381]])
    got =
        [768, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 980
# % 0300 x 0308 x 094D % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[768, 776, 2381]])
    got =
        [768, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 981
# % 0300 x 200D % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[768, 8205]])
    got =
        [768, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 982
# % 0300 x 0308 x 200D % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[768, 776, 8205]])
    got =
        [768, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 983
# % 0300 % 0378 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[768], [888]])
    got =
        [768, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 984
# % 0300 x 0308 % 0378 % #  % [0.2] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[768, 776], [888]])
    got =
        [768, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 985
# % 093C % 0020 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2364], [32]])
    got =
        [2364, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 986
# % 093C x 0308 % 0020 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2364, 776], [32]])
    got =
        [2364, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 987
# % 093C % 000D % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2364], [13]])
    got =
        [2364, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 988
# % 093C x 0308 % 000D % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2364, 776], [13]])
    got =
        [2364, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 989
# % 093C % 000A % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2364], [10]])
    got =
        [2364, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 990
# % 093C x 0308 % 000A % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2364, 776], [10]])
    got =
        [2364, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 991
# % 093C % 0001 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2364], [1]])
    got =
        [2364, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 992
# % 093C x 0308 % 0001 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2364, 776], [1]])
    got =
        [2364, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 993
# % 093C x 034F % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2364, 847]])
    got =
        [2364, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 994
# % 093C x 0308 x 034F % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2364, 776, 847]])
    got =
        [2364, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 995
# % 093C % 1F1E6 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2364], [127462]])
    got =
        [2364, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 996
# % 093C x 0308 % 1F1E6 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2364, 776], [127462]])
    got =
        [2364, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 997
# % 093C % 0600 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2364], [1536]])
    got =
        [2364, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 998
# % 093C x 0308 % 0600 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2364, 776], [1536]])
    got =
        [2364, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1001
# % 093C % 1100 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2364], [4352]])
    got =
        [2364, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1002
# % 093C x 0308 % 1100 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2364, 776], [4352]])
    got =
        [2364, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1003
# % 093C % 1160 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2364], [4448]])
    got =
        [2364, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1004
# % 093C x 0308 % 1160 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2364, 776], [4448]])
    got =
        [2364, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1005
# % 093C % 11A8 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2364], [4520]])
    got =
        [2364, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1006
# % 093C x 0308 % 11A8 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2364, 776], [4520]])
    got =
        [2364, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1007
# % 093C % AC00 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2364], [44032]])
    got =
        [2364, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1008
# % 093C x 0308 % AC00 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2364, 776], [44032]])
    got =
        [2364, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1009
# % 093C % AC01 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2364], [44033]])
    got =
        [2364, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1010
# % 093C x 0308 % AC01 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2364, 776], [44033]])
    got =
        [2364, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1011
# % 093C x 0900 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2364, 2304]])
    got =
        [2364, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1012
# % 093C x 0308 x 0900 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2364, 776, 2304]])
    got =
        [2364, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1015
# % 093C % 0904 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2364], [2308]])
    got =
        [2364, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1016
# % 093C x 0308 % 0904 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2364, 776], [2308]])
    got =
        [2364, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1017
# % 093C % 0D4E % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2364], [3406]])
    got =
        [2364, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1018
# % 093C x 0308 % 0D4E % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2364, 776], [3406]])
    got =
        [2364, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1019
# % 093C % 0915 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2364], [2325]])
    got =
        [2364, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1020
# % 093C x 0308 % 0915 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2364, 776], [2325]])
    got =
        [2364, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1021
# % 093C % 231A % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2364], [8986]])
    got =
        [2364, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1022
# % 093C x 0308 % 231A % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2364, 776], [8986]])
    got =
        [2364, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1023
# % 093C x 0300 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2364, 768]])
    got =
        [2364, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1024
# % 093C x 0308 x 0300 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2364, 776, 768]])
    got =
        [2364, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1025
# % 093C x 093C % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2364, 2364]])
    got =
        [2364, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1026
# % 093C x 0308 x 093C % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2364, 776, 2364]])
    got =
        [2364, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1027
# % 093C x 094D % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2364, 2381]])
    got =
        [2364, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1028
# % 093C x 0308 x 094D % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2364, 776, 2381]])
    got =
        [2364, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1029
# % 093C x 200D % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2364, 8205]])
    got =
        [2364, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1030
# % 093C x 0308 x 200D % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2364, 776, 8205]])
    got =
        [2364, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1031
# % 093C % 0378 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2364], [888]])
    got =
        [2364, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1032
# % 093C x 0308 % 0378 % #  % [0.2] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2364, 776], [888]])
    got =
        [2364, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1033
# % 094D % 0020 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2381], [32]])
    got =
        [2381, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1034
# % 094D x 0308 % 0020 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[2381, 776], [32]])
    got =
        [2381, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1035
# % 094D % 000D % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2381], [13]])
    got =
        [2381, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1036
# % 094D x 0308 % 000D % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[2381, 776], [13]])
    got =
        [2381, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1037
# % 094D % 000A % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2381], [10]])
    got =
        [2381, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1038
# % 094D x 0308 % 000A % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[2381, 776], [10]])
    got =
        [2381, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1039
# % 094D % 0001 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2381], [1]])
    got =
        [2381, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1040
# % 094D x 0308 % 0001 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[2381, 776], [1]])
    got =
        [2381, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1041
# % 094D x 034F % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2381, 847]])
    got =
        [2381, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1042
# % 094D x 0308 x 034F % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[2381, 776, 847]])
    got =
        [2381, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1043
# % 094D % 1F1E6 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2381], [127462]])
    got =
        [2381, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1044
# % 094D x 0308 % 1F1E6 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[2381, 776], [127462]])
    got =
        [2381, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1045
# % 094D % 0600 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2381], [1536]])
    got =
        [2381, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1046
# % 094D x 0308 % 0600 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[2381, 776], [1536]])
    got =
        [2381, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1049
# % 094D % 1100 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2381], [4352]])
    got =
        [2381, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1050
# % 094D x 0308 % 1100 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[2381, 776], [4352]])
    got =
        [2381, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1051
# % 094D % 1160 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2381], [4448]])
    got =
        [2381, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1052
# % 094D x 0308 % 1160 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[2381, 776], [4448]])
    got =
        [2381, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1053
# % 094D % 11A8 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2381], [4520]])
    got =
        [2381, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1054
# % 094D x 0308 % 11A8 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[2381, 776], [4520]])
    got =
        [2381, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1055
# % 094D % AC00 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2381], [44032]])
    got =
        [2381, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1056
# % 094D x 0308 % AC00 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[2381, 776], [44032]])
    got =
        [2381, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1057
# % 094D % AC01 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2381], [44033]])
    got =
        [2381, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1058
# % 094D x 0308 % AC01 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[2381, 776], [44033]])
    got =
        [2381, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1059
# % 094D x 0900 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2381, 2304]])
    got =
        [2381, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1060
# % 094D x 0308 x 0900 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2381, 776, 2304]])
    got =
        [2381, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1063
# % 094D % 0904 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2381], [2308]])
    got =
        [2381, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1064
# % 094D x 0308 % 0904 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2381, 776], [2308]])
    got =
        [2381, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1065
# % 094D % 0D4E % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2381], [3406]])
    got =
        [2381, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1066
# % 094D x 0308 % 0D4E % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[2381, 776], [3406]])
    got =
        [2381, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1067
# % 094D % 0915 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2381], [2325]])
    got =
        [2381, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1068
# % 094D x 0308 % 0915 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2381, 776], [2325]])
    got =
        [2381, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1069
# % 094D % 231A % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2381], [8986]])
    got =
        [2381, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1070
# % 094D x 0308 % 231A % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[2381, 776], [8986]])
    got =
        [2381, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1071
# % 094D x 0300 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2381, 768]])
    got =
        [2381, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1072
# % 094D x 0308 x 0300 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2381, 776, 768]])
    got =
        [2381, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1073
# % 094D x 093C % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2381, 2364]])
    got =
        [2381, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1074
# % 094D x 0308 x 093C % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2381, 776, 2364]])
    got =
        [2381, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1075
# % 094D x 094D % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2381, 2381]])
    got =
        [2381, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1076
# % 094D x 0308 x 094D % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2381, 776, 2381]])
    got =
        [2381, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1077
# % 094D x 200D % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2381, 8205]])
    got =
        [2381, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1078
# % 094D x 0308 x 200D % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[2381, 776, 8205]])
    got =
        [2381, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1079
# % 094D % 0378 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2381], [888]])
    got =
        [2381, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1080
# % 094D x 0308 % 0378 % #  % [0.2] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[2381, 776], [888]])
    got =
        [2381, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1081
# % 200D % 0020 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[8205], [32]])
    got =
        [8205, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1082
# % 200D x 0308 % 0020 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[8205, 776], [32]])
    got =
        [8205, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1083
# % 200D % 000D % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[8205], [13]])
    got =
        [8205, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1084
# % 200D x 0308 % 000D % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[8205, 776], [13]])
    got =
        [8205, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1085
# % 200D % 000A % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[8205], [10]])
    got =
        [8205, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1086
# % 200D x 0308 % 000A % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[8205, 776], [10]])
    got =
        [8205, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1087
# % 200D % 0001 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[8205], [1]])
    got =
        [8205, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1088
# % 200D x 0308 % 0001 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[8205, 776], [1]])
    got =
        [8205, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1089
# % 200D x 034F % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[8205, 847]])
    got =
        [8205, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1090
# % 200D x 0308 x 034F % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[8205, 776, 847]])
    got =
        [8205, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1091
# % 200D % 1F1E6 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[8205], [127462]])
    got =
        [8205, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1092
# % 200D x 0308 % 1F1E6 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[8205, 776], [127462]])
    got =
        [8205, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1093
# % 200D % 0600 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[8205], [1536]])
    got =
        [8205, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1094
# % 200D x 0308 % 0600 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[8205, 776], [1536]])
    got =
        [8205, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1097
# % 200D % 1100 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[8205], [4352]])
    got =
        [8205, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1098
# % 200D x 0308 % 1100 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[8205, 776], [4352]])
    got =
        [8205, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1099
# % 200D % 1160 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[8205], [4448]])
    got =
        [8205, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1100
# % 200D x 0308 % 1160 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[8205, 776], [4448]])
    got =
        [8205, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1101
# % 200D % 11A8 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[8205], [4520]])
    got =
        [8205, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1102
# % 200D x 0308 % 11A8 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[8205, 776], [4520]])
    got =
        [8205, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1103
# % 200D % AC00 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[8205], [44032]])
    got =
        [8205, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1104
# % 200D x 0308 % AC00 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[8205, 776], [44032]])
    got =
        [8205, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1105
# % 200D % AC01 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[8205], [44033]])
    got =
        [8205, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1106
# % 200D x 0308 % AC01 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[8205, 776], [44033]])
    got =
        [8205, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1107
# % 200D x 0900 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8205, 2304]])
    got =
        [8205, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1108
# % 200D x 0308 x 0900 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8205, 776, 2304]])
    got =
        [8205, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1111
# % 200D % 0904 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8205], [2308]])
    got =
        [8205, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1112
# % 200D x 0308 % 0904 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8205, 776], [2308]])
    got =
        [8205, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1113
# % 200D % 0D4E % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8205], [3406]])
    got =
        [8205, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1114
# % 200D x 0308 % 0D4E % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[8205, 776], [3406]])
    got =
        [8205, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1115
# % 200D % 0915 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[8205], [2325]])
    got =
        [8205, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1116
# % 200D x 0308 % 0915 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[8205, 776], [2325]])
    got =
        [8205, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1117
# % 200D % 231A % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[8205], [8986]])
    got =
        [8205, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1118
# % 200D x 0308 % 231A % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[8205, 776], [8986]])
    got =
        [8205, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1119
# % 200D x 0300 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8205, 768]])
    got =
        [8205, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1120
# % 200D x 0308 x 0300 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8205, 776, 768]])
    got =
        [8205, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1121
# % 200D x 093C % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8205, 2364]])
    got =
        [8205, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1122
# % 200D x 0308 x 093C % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8205, 776, 2364]])
    got =
        [8205, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1123
# % 200D x 094D % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8205, 2381]])
    got =
        [8205, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1124
# % 200D x 0308 x 094D % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8205, 776, 2381]])
    got =
        [8205, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1125
# % 200D x 200D % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8205, 8205]])
    got =
        [8205, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1126
# % 200D x 0308 x 200D % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[8205, 776, 8205]])
    got =
        [8205, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1127
# % 200D % 0378 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[8205], [888]])
    got =
        [8205, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1128
# % 200D x 0308 % 0378 % #  % [0.2] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[8205, 776], [888]])
    got =
        [8205, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1129
# % 0378 % 0020 % #  % [0.2] <reserved-0378> (Other) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[888], [32]])
    got =
        [888, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1130
# % 0378 x 0308 % 0020 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[888, 776], [32]])
    got =
        [888, 776, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1131
# % 0378 % 000D % #  % [0.2] <reserved-0378> (Other) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[888], [13]])
    got =
        [888, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1132
# % 0378 x 0308 % 000D % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <CARRIAGE RETURN (CR)> (CR) % [0.3]
expect
    exp = Ok([[888, 776], [13]])
    got =
        [888, 776, 13]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1133
# % 0378 % 000A % #  % [0.2] <reserved-0378> (Other) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[888], [10]])
    got =
        [888, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1134
# % 0378 x 0308 % 000A % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <LINE FEED (LF)> (LF) % [0.3]
expect
    exp = Ok([[888, 776], [10]])
    got =
        [888, 776, 10]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1135
# % 0378 % 0001 % #  % [0.2] <reserved-0378> (Other) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[888], [1]])
    got =
        [888, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1136
# % 0378 x 0308 % 0001 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [5.0] <START OF HEADING> (Control) % [0.3]
expect
    exp = Ok([[888, 776], [1]])
    got =
        [888, 776, 1]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1137
# % 0378 x 034F % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[888, 847]])
    got =
        [888, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1138
# % 0378 x 0308 x 034F % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAPHEME JOINER (Extend) % [0.3]
expect
    exp = Ok([[888, 776, 847]])
    got =
        [888, 776, 847]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1139
# % 0378 % 1F1E6 % #  % [0.2] <reserved-0378> (Other) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[888], [127462]])
    got =
        [888, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1140
# % 0378 x 0308 % 1F1E6 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) % [0.3]
expect
    exp = Ok([[888, 776], [127462]])
    got =
        [888, 776, 127462]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1141
# % 0378 % 0600 % #  % [0.2] <reserved-0378> (Other) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[888], [1536]])
    got =
        [888, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1142
# % 0378 x 0308 % 0600 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] ARABIC NUMBER SIGN (Prepend) % [0.3]
expect
    exp = Ok([[888, 776], [1536]])
    got =
        [888, 776, 1536]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1145
# % 0378 % 1100 % #  % [0.2] <reserved-0378> (Other) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[888], [4352]])
    got =
        [888, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1146
# % 0378 x 0308 % 1100 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[888, 776], [4352]])
    got =
        [888, 776, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1147
# % 0378 % 1160 % #  % [0.2] <reserved-0378> (Other) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[888], [4448]])
    got =
        [888, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1148
# % 0378 x 0308 % 1160 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JUNGSEONG FILLER (V) % [0.3]
expect
    exp = Ok([[888, 776], [4448]])
    got =
        [888, 776, 4448]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1149
# % 0378 % 11A8 % #  % [0.2] <reserved-0378> (Other) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[888], [4520]])
    got =
        [888, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1150
# % 0378 x 0308 % 11A8 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL JONGSEONG KIYEOK (T) % [0.3]
expect
    exp = Ok([[888, 776], [4520]])
    got =
        [888, 776, 4520]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1151
# % 0378 % AC00 % #  % [0.2] <reserved-0378> (Other) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[888], [44032]])
    got =
        [888, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1152
# % 0378 x 0308 % AC00 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GA (LV) % [0.3]
expect
    exp = Ok([[888, 776], [44032]])
    got =
        [888, 776, 44032]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1153
# % 0378 % AC01 % #  % [0.2] <reserved-0378> (Other) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[888], [44033]])
    got =
        [888, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1154
# % 0378 x 0308 % AC01 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] HANGUL SYLLABLE GAG (LVT) % [0.3]
expect
    exp = Ok([[888, 776], [44033]])
    got =
        [888, 776, 44033]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1155
# % 0378 x 0900 % #  % [0.2] <reserved-0378> (Other) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[888, 2304]])
    got =
        [888, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1156
# % 0378 x 0308 x 0900 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN INVERTED CANDRABINDU (Extend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[888, 776, 2304]])
    got =
        [888, 776, 2304]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1159
# % 0378 % 0904 % #  % [0.2] <reserved-0378> (Other) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[888], [2308]])
    got =
        [888, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1160
# % 0378 x 0308 % 0904 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER SHORT A (ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[888, 776], [2308]])
    got =
        [888, 776, 2308]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1161
# % 0378 % 0D4E % #  % [0.2] <reserved-0378> (Other) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[888], [3406]])
    got =
        [888, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1162
# % 0378 x 0308 % 0D4E % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] MALAYALAM LETTER DOT REPH (Prepend_ConjunctLinkingScripts) % [0.3]
expect
    exp = Ok([[888, 776], [3406]])
    got =
        [888, 776, 3406]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1163
# % 0378 % 0915 % #  % [0.2] <reserved-0378> (Other) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[888], [2325]])
    got =
        [888, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1164
# % 0378 x 0308 % 0915 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[888, 776], [2325]])
    got =
        [888, 776, 2325]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1165
# % 0378 % 231A % #  % [0.2] <reserved-0378> (Other) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[888], [8986]])
    got =
        [888, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1166
# % 0378 x 0308 % 231A % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] WATCH (ExtPict) % [0.3]
expect
    exp = Ok([[888, 776], [8986]])
    got =
        [888, 776, 8986]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1167
# % 0378 x 0300 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[888, 768]])
    got =
        [888, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1168
# % 0378 x 0308 x 0300 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] COMBINING GRAVE ACCENT (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[888, 776, 768]])
    got =
        [888, 776, 768]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1169
# % 0378 x 093C % #  % [0.2] <reserved-0378> (Other) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[888, 2364]])
    got =
        [888, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1170
# % 0378 x 0308 x 093C % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN NUKTA (Extend_ConjunctLinkingScripts_ExtCccZwj) % [0.3]
expect
    exp = Ok([[888, 776, 2364]])
    got =
        [888, 776, 2364]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1171
# % 0378 x 094D % #  % [0.2] <reserved-0378> (Other) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[888, 2381]])
    got =
        [888, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1172
# % 0378 x 0308 x 094D % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [0.3]
expect
    exp = Ok([[888, 776, 2381]])
    got =
        [888, 776, 2381]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1173
# % 0378 x 200D % #  % [0.2] <reserved-0378> (Other) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[888, 8205]])
    got =
        [888, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1174
# % 0378 x 0308 x 200D % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[888, 776, 8205]])
    got =
        [888, 776, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1175
# % 0378 % 0378 % #  % [0.2] <reserved-0378> (Other) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[888], [888]])
    got =
        [888, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1176
# % 0378 x 0308 % 0378 % #  % [0.2] <reserved-0378> (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] <reserved-0378> (Other) % [0.3]
expect
    exp = Ok([[888, 776], [888]])
    got =
        [888, 776, 888]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1177
# % 000D x 000A % 0061 % 000A % 0308 % #  % [0.2] <CARRIAGE RETURN (CR)> (CR) x [3.0] <LINE FEED (LF)> (LF) % [4.0] LATIN SMALL LETTER A (Other) % [5.0] <LINE FEED (LF)> (LF) % [4.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[13, 10], [97], [10], [776]])
    got =
        [13, 10, 97, 10, 776]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1178
# % 0061 x 0308 % #  % [0.2] LATIN SMALL LETTER A (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [0.3]
expect
    exp = Ok([[97, 776]])
    got =
        [97, 776]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1179
# % 0020 x 200D % 0646 % #  % [0.2] SPACE (Other) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] ARABIC LETTER NOON (Other) % [0.3]
expect
    exp = Ok([[32, 8205], [1606]])
    got =
        [32, 8205, 1606]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1180
# % 0646 x 200D % 0020 % #  % [0.2] ARABIC LETTER NOON (Other) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] SPACE (Other) % [0.3]
expect
    exp = Ok([[1606, 8205], [32]])
    got =
        [1606, 8205, 32]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1181
# % 1100 x 1100 % #  % [0.2] HANGUL CHOSEONG KIYEOK (L) x [6.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[4352, 4352]])
    got =
        [4352, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1182
# % AC00 x 11A8 % 1100 % #  % [0.2] HANGUL SYLLABLE GA (LV) x [7.0] HANGUL JONGSEONG KIYEOK (T) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[44032, 4520], [4352]])
    got =
        [44032, 4520, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1183
# % AC01 x 11A8 % 1100 % #  % [0.2] HANGUL SYLLABLE GAG (LVT) x [8.0] HANGUL JONGSEONG KIYEOK (T) % [999.0] HANGUL CHOSEONG KIYEOK (L) % [0.3]
expect
    exp = Ok([[44033, 4520], [4352]])
    got =
        [44033, 4520, 4352]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1184
# % 1F1E6 x 1F1E7 % 1F1E8 % 0062 % #  % [0.2] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [12.0] REGIONAL INDICATOR SYMBOL LETTER B (RI) % [999.0] REGIONAL INDICATOR SYMBOL LETTER C (RI) % [999.0] LATIN SMALL LETTER B (Other) % [0.3]
expect
    exp = Ok([[127462, 127463], [127464], [98]])
    got =
        [127462, 127463, 127464, 98]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1185
# % 0061 % 1F1E6 x 1F1E7 % 1F1E8 % 0062 % #  % [0.2] LATIN SMALL LETTER A (Other) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [13.0] REGIONAL INDICATOR SYMBOL LETTER B (RI) % [999.0] REGIONAL INDICATOR SYMBOL LETTER C (RI) % [999.0] LATIN SMALL LETTER B (Other) % [0.3]
expect
    exp = Ok([[97], [127462, 127463], [127464], [98]])
    got =
        [97, 127462, 127463, 127464, 98]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1186
# % 0061 % 1F1E6 x 1F1E7 x 200D % 1F1E8 % 0062 % #  % [0.2] LATIN SMALL LETTER A (Other) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [13.0] REGIONAL INDICATOR SYMBOL LETTER B (RI) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER C (RI) % [999.0] LATIN SMALL LETTER B (Other) % [0.3]
expect
    exp = Ok([[97], [127462, 127463, 8205], [127464], [98]])
    got =
        [97, 127462, 127463, 8205, 127464, 98]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1187
# % 0061 % 1F1E6 x 200D % 1F1E7 x 1F1E8 % 0062 % #  % [0.2] LATIN SMALL LETTER A (Other) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] REGIONAL INDICATOR SYMBOL LETTER B (RI) x [13.0] REGIONAL INDICATOR SYMBOL LETTER C (RI) % [999.0] LATIN SMALL LETTER B (Other) % [0.3]
expect
    exp = Ok([[97], [127462, 8205], [127463, 127464], [98]])
    got =
        [97, 127462, 8205, 127463, 127464, 98]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1188
# % 0061 % 1F1E6 x 1F1E7 % 1F1E8 x 1F1E9 % 0062 % #  % [0.2] LATIN SMALL LETTER A (Other) % [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) x [13.0] REGIONAL INDICATOR SYMBOL LETTER B (RI) % [999.0] REGIONAL INDICATOR SYMBOL LETTER C (RI) x [13.0] REGIONAL INDICATOR SYMBOL LETTER D (RI) % [999.0] LATIN SMALL LETTER B (Other) % [0.3]
expect
    exp = Ok([[97], [127462, 127463], [127464, 127465], [98]])
    got =
        [97, 127462, 127463, 127464, 127465, 98]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1189
# % 0061 x 200D % #  % [0.2] LATIN SMALL LETTER A (Other) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [0.3]
expect
    exp = Ok([[97, 8205]])
    got =
        [97, 8205]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1190
# % 0061 x 0308 % 0062 % #  % [0.2] LATIN SMALL LETTER A (Other) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) % [999.0] LATIN SMALL LETTER B (Other) % [0.3]
expect
    exp = Ok([[97, 776], [98]])
    got =
        [97, 776, 98]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1193
# % 1F476 x 1F3FF % 1F476 % #  % [0.2] BABY (ExtPict) x [9.0] EMOJI MODIFIER FITZPATRICK TYPE-6 (Extend) % [999.0] BABY (ExtPict) % [0.3]
expect
    exp = Ok([[128118, 127999], [128118]])
    got =
        [128118, 127999, 128118]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1194
# % 0061 x 1F3FF % 1F476 % #  % [0.2] LATIN SMALL LETTER A (Other) x [9.0] EMOJI MODIFIER FITZPATRICK TYPE-6 (Extend) % [999.0] BABY (ExtPict) % [0.3]
expect
    exp = Ok([[97, 127999], [128118]])
    got =
        [97, 127999, 128118]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1195
# % 0061 x 1F3FF % 1F476 x 200D x 1F6D1 % #  % [0.2] LATIN SMALL LETTER A (Other) x [9.0] EMOJI MODIFIER FITZPATRICK TYPE-6 (Extend) % [999.0] BABY (ExtPict) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [11.0] OCTAGONAL SIGN (ExtPict) % [0.3]
expect
    exp = Ok([[97, 127999], [128118, 8205, 128721]])
    got =
        [97, 127999, 128118, 8205, 128721]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1196
# % 1F476 x 1F3FF x 0308 x 200D x 1F476 x 1F3FF % #  % [0.2] BABY (ExtPict) x [9.0] EMOJI MODIFIER FITZPATRICK TYPE-6 (Extend) x [9.0] COMBINING DIAERESIS (Extend_ExtCccZwj) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [11.0] BABY (ExtPict) x [9.0] EMOJI MODIFIER FITZPATRICK TYPE-6 (Extend) % [0.3]
expect
    exp = Ok([[128118, 127999, 776, 8205, 128118, 127999]])
    got =
        [128118, 127999, 776, 8205, 128118, 127999]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1197
# % 1F6D1 x 200D x 1F6D1 % #  % [0.2] OCTAGONAL SIGN (ExtPict) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [11.0] OCTAGONAL SIGN (ExtPict) % [0.3]
expect
    exp = Ok([[128721, 8205, 128721]])
    got =
        [128721, 8205, 128721]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1198
# % 0061 x 200D % 1F6D1 % #  % [0.2] LATIN SMALL LETTER A (Other) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] OCTAGONAL SIGN (ExtPict) % [0.3]
expect
    exp = Ok([[97, 8205], [128721]])
    got =
        [97, 8205, 128721]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1199
# % 2701 x 200D x 2701 % #  % [0.2] UPPER BLADE SCISSORS (Other) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) x [11.0] UPPER BLADE SCISSORS (Other) % [0.3]
expect
    exp = Ok([[9985, 8205, 9985]])
    got =
        [9985, 8205, 9985]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1200
# % 0061 x 200D % 2701 % #  % [0.2] LATIN SMALL LETTER A (Other) x [9.0] ZERO WIDTH JOINER (ZWJ_ExtCccZwj) % [999.0] UPPER BLADE SCISSORS (Other) % [0.3]
expect
    exp = Ok([[97, 8205], [9985]])
    got =
        [97, 8205, 9985]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1201
# % 0915 % 0924 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) % [999.0] DEVANAGARI LETTER TA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[2325], [2340]])
    got =
        [2325, 2340]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1208
# % 0915 x 094D % 0061 % #  % [0.2] DEVANAGARI LETTER KA (ConjunctLinkingScripts_LinkingConsonant) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] LATIN SMALL LETTER A (Other) % [0.3]
expect
    exp = Ok([[2325, 2381], [97]])
    got =
        [2325, 2381, 97]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1209
# % 0061 x 094D % 0924 % #  % [0.2] LATIN SMALL LETTER A (Other) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] DEVANAGARI LETTER TA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[97, 2381], [2340]])
    got =
        [97, 2381, 2340]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp

# GraphemeBreakTest-15.1.0.txt:line 1210
# % 003F x 094D % 0924 % #  % [0.2] QUESTION MARK (Other) x [9.0] DEVANAGARI SIGN VIRAMA (Extend_ConjunctLinkingScripts_ConjunctLinker_ExtCccZwj) % [999.0] DEVANAGARI LETTER TA (ConjunctLinkingScripts_LinkingConsonant) % [0.3]
expect
    exp = Ok([[63, 2381], [2340]])
    got =
        [63, 2381, 2340]
        |> List.map(InternalCP.from_u32_unchecked)
        |> CodePoint.to_str
        |> Result.try(Grapheme.split)
        |> Result.map_ok(to_code_point_list)

    got == exp
